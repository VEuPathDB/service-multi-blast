#%RAML 1.0 Extension

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#
# Extends the project specific API definition with additional meta services
# useful for containerized applications.
#
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

extends: ../../api.raml

uses:
  lib: ./library.raml

#
# Predefined Services
#

/api:
  displayName: API Documentation
  get:
    responses:
      200:
        body:
          text/html:

/health:
  displayName: Health Check
  get:
    responses:
      200:
        body:
          application/json:
            type: lib.HealthResponse
      500:
        body:
          application/json:
            type: lib.ServerErrorResponse

types:
  HealthResponse:
    description: Health details about the service
    type: object
    additionalProperties: false
    properties:
      status:
        description: |
          Status describes the overall service state.  A status of "healthy"
          indicates that everything is running smoothly and all service dependencies
          are reachable and online.  A status of "unhealthy" indicates that
          something is wrong with either this service or one or more of it's
          dependency services.
        type: string
        enum:
          - healthy
          - unhealthy
      dependencies:
        description: |
          A list of external services that this service depends on and some details
          about them.
        type: array
        items:
          type: DependencyStatus
      info:
        properties:
          threads:
            type: integer
            minimum: 1

  DependencyStatus:
    additionalProperties: false
    properties:
      name:
        description: Name of the external depdendency.
        type: string
      reachable:
        description: Whether or not the external service is reachable.
        type: boolean
      online:
        description: |
          Whether or not the external service is online and available for
          requests.
        type: string
        enum:
          - yes
          - unknown
          - no
