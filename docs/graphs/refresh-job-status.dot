digraph {
  graph [nodesep=0.8, ranksep=0.8]
  node  [shape=rect, margin=0, width="1.2"]
  edge  [color=darkblue]

  //
  // Nodes
  //

  // External Resources
  {
    node [shape=cylinder, color=purple]

    DB    [label="MBlast DB"]
    FS    [label="MBlast\nWorkspaces"]
    Queue [label="Job Queue", shape=component]
  }

  // End Caps
  {
    node [shape=oval]

    Start [label="Start\ninput: $job"]
    End
  }

  // Decisions
  {
    node [shape=diamond]

    SwitchInStatus    [label="Switch:\n$job.status"]
    SwitchQueueStatus [label="Switch:\n$queue.status"]
    JobExistsInWS     [label="Workspace\nexists?"]
  }

  // Internal processes
  {
    LookupQueueStatus [label="Lookup\nqueue status:\n$queue"]
    CheckJobExists    [label="Verify\njob exists in\n workspaces"]
    SetExpired        [label="$job.status = expired"]
    SetErrored        [label="$job.status = errored"]
    SetCompleted      [label="$job.status = complete"]
    UpdateDBStatus    [label="Update status\nin DB"]
  }

  //
  // Edges
  //

  Start -> SwitchInStatus

  SwitchInStatus:s -> LookupQueueStatus [taillabel="QUEUED\lIN_PROGRESS\l"]
  SwitchInStatus:e -> CheckJobExists    [taillabel="COMPLETED"]
  SwitchInStatus:w -> End               [taillabel="ERRORED\lEXPIRED\l"]

  LookupQueueStatus -> SwitchQueueStatus:n

  SwitchQueueStatus:se -> SetErrored     [taillabel="  ERRORED"]
  SwitchQueueStatus:ne -> CheckJobExists [taillabel="COMPLETED", constraint=false]
  SwitchQueueStatus:sw -> End            [taillabel="QUEUED\lIN_PROGRESS  \l"]

  CheckJobExists -> JobExistsInWS

  JobExistsInWS:se -> SetCompleted [taillabel="Yes", color=darkgreen, ]
  JobExistsInWS:sw -> SetExpired   [taillabel="No", color=darkred]

  SetErrored   -> UpdateDBStatus []
  SetExpired   -> UpdateDBStatus

  UpdateDBStatus -> End
  SetCompleted   -> End

  // External resource calls
  {
    edge [style=dotted, color="#333333"]

    Queue -> LookupQueueStatus
    UpdateDBStatus -> DB
    CheckJobExists    -> FS    [dir=back]
  }

  //
  // Formatting
  //

  {
    rank=same
    LookupQueueStatus
    Queue
  }

  {
    rank=same
    // CheckJobExists
    SwitchQueueStatus
    FS
  }

  {
    rank=same
    // JobExistsInWS
    SetExpired
  }

  {
    rank=same
    LookupQueueStatus
    Queue
  }


  {
    rank=same
    SetExpired
    SetErrored
  }

  {
    rank=sink
    End
  }

  {
    edge [style=invis]
    Queue -> SwitchQueueStatus
    SetErrored -> SetExpired
    SetExpired -> SetCompleted
  }

}