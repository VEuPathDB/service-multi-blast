digraph {
  graph [nodesep=1, ranksep=0.8, splines=ortho]
  node  [margin=0, shape=rect, width=1.5]
  edge  [color=darkblue]

  //
  // Nodes
  //

  // Response Codes
  401 [shape=oval, color=orange]
  404 [shape=oval, color=orange]
  200 [label="200\nJob details", shape=oval, color=darkgreen]

  Start               [label="GET /jobs/{job-id}", shape=oval, color=darkgreen]
  IsUserTokenProvided [label="Is user\ntoken\nprovided?", shape=diamond]
  ValidateJobID       [label="|Job ID hash\nvalidation|", shape=record]
  GetAndLinkUserJob   [label="|Get and Link\nUser Job|", shape=record]
  RefreshJobStatus    [label="|Refresh\njob status|", shape=record]
  RefreshSubJobStatus [label="|Refresh\nsub-job\nstatuses|", shape=record]
  IsJobStillCached    [label="Is job\nstatus\nexpired?", shape=diamond]
  UpdateLastUsed      [label="Update\nlast used"]


  //
  // Edges
  //

  Start               -> IsUserTokenProvided

  IsUserTokenProvided -> ValidateJobID       [taillabel="Yes", color=darkgreen]
  401                 -> IsUserTokenProvided [headlabel="No", color=darkred, dir=back]

  ValidateJobID       -> GetAndLinkUserJob
  ValidateJobID       -> 404                 [taillabel="Invalid\nhash", color=darkred, constraint=false]

  GetAndLinkUserJob   -> RefreshJobStatus
  GetAndLinkUserJob   -> 404                 [taillabel="Job not found", color=darkred, constraint=false]

  RefreshJobStatus    -> RefreshSubJobStatus

  RefreshSubJobStatus -> IsJobStillCached

  UpdateLastUsed      -> IsJobStillCached    [headlabel="No", color=darkred, dir=back]
  IsJobStillCached    -> 200                 [taillabel="Yes", color=darkgreen]
  UpdateLastUsed      -> 200                 [constraint=false]


  //
  // Formatting
  //
  { rank=same; IsUserTokenProvided; 401 }
  { rank=same; 404; ValidateJobID }
  { rank=same; UpdateLastUsed; IsJobStillCached }

  {
    edge [style=invis]
    401 -> 404
  }
}