digraph {
  graph [nodesep=0.5]

  #
  # Node Definitions
  #

  # Ends
  {
    node [shape="circle"]
    start [label="Start", color="blue"]
    pass  [label="Pass", color="green"]
    fail  [label="Fail", color="red"]
  }

  # File Systems
  {
    node [shape="folder", color="goldenrod4"]
    blast [label="Blast DBs"]
  }

  # Caches
  {
    node [shape="box3d", color="purple"]
    validationErrors [label="Validation\nErrors"]
  }

  # Processes
  {
    node [shape="rectangle"]
    validateTargetSite [label="Test target site"]
    validateTargetDB   [label="Test target DB"]
    recordError1 [label="Record validation error"]
    recordError2 [label="Record validation error"]
    recordError3 [label="Record valdiation error"]
  }

  # External Processes
  {
    node [shape="record"]
    validateQuery [label="|Validate query|"]
  }

  # Loops
  {
    node [shape="octagon"]
    forEachDB [label="For each\ntarget DB"]
  }

  # Decisions
  {
    node [shape="diamond"]
    isTargetSiteValid    [label="Is target\nsite valid?"]
    areMoreTargetDBs     [label="More\ntarget DBs?"]
    isTargetDBValid      [label="Is target\nDB valid?"]
    isQueryPresent       [label="Is query\npresent?"]
    haveValidationErrors [label="Are there\nvalidation errors?"]
    isQueryValid         [label="Is query\nvalid?"]
  }

  # Layout
  {
    node [shape=square]
    RA; RB; RC; RD; RE
  }

  #
  # Edge Definitions
  #

  # Process
  {
  
    start                -> validateTargetSite
    validateTargetSite   -> isTargetSiteValid
    isTargetSiteValid    -> recordError1 [taillabel="No"]
    isTargetSiteValid    -> forEachDB [taillabel="Yes"]
    recordError1         -> forEachDB [constraint=false]
    forEachDB            -> validateTargetDB
    validateTargetDB     -> isTargetDBValid
    isTargetDBValid      -> recordError2 [taillabel="No"]
    isTargetDBValid      -> areMoreTargetDBs [taillabel="Yes"]
    recordError2         -> areMoreTargetDBs [constraint=false]
    areMoreTargetDBs     -> isQueryPresent [taillabel="No"]
    areMoreTargetDBs     -> forEachDB [taillabel="Yes"]
    isQueryPresent       -> haveValidationErrors [taillabel="No"]
    isQueryPresent       -> validateQuery [taillabel="Yes"]
    validateQuery        -> isQueryValid
    isQueryValid         -> recordError3 [taillabel="No"]
    isQueryValid         -> haveValidationErrors [taillabel="Yes"]
    recordError3         -> haveValidationErrors [constraint=false]
    haveValidationErrors -> pass [taillabel="No"]
    haveValidationErrors -> fail [taillabel="Yes"]
  }

  # Dependencies
  {
    edge [constraint=false, color="gray35", style="dashed"]
    recordError1 -> validationErrors
    recordError2 -> validationErrors
    recordError3 -> validationErrors
    haveValidationErrors -> validationErrors
    validateTargetDB -> blast
  }

  # Layout
  {
    start
    -> RA
    -> RB
    -> RC
    -> RD
    -> RE
  }

  #
  # Positioning
  #
  {
    rank=same
    start
    RA; RB; RC; RD; RE
  }
  { rank=same; isTargetSiteValid; recordError1 }
  { rank=same; isTargetDBValid; recordError2; validationErrors }
  { rank=same; isQueryValid; recordError3 }
  { rank=same; forEachDB; blast}
}