digraph {
  graph [nodesep=0.5]

  #
  # Node Definitions
  #
  
  # Ends
  {
    start [label="Start", color=blue]
    204 [color=green]
    404 [color=red]
  }

  # Components
  {
    node [shape=component]
    containerCore [label="Container Core"]
  }

  # Databases
  {
    node [shape=cylinder]
    userDB [label="User DB"]
  }

  # External Processes
  {
    node [shape=record]
    lookupUser [label="|Lookup user|"]
  }

  # Processes
  {
    node [shape=rectangle]
    lookupJob  [label="Lookup job in user DB"]
    deleteLink [label="Delete link between user and job"]
  }

  # Decisions
  {
    node [shape=diamond]
    doesJobExist [label="Does job exist?"]
    isUserLinked [label="Is user linked to job?"]
  }

  #
  # Edge Definitions
  #

  # Process
  {
    start -> lookupUser
    lookupUser -> lookupJob
    lookupJob -> doesJobExist
    doesJobExist -> 404
    doesJobExist -> isUserLinked
    isUserLinked -> 404
    isUserLinked -> deleteLink
    deleteLink -> 204
  }

  # Dependence
  {
    edge [constraint=false, color=gray35, style=dashed]
    lookupUser -> containerCore
    lookupJob -> userDB
    deleteLink -> userDB
  }

  # Layout
  {
    edge [style=invis]
    containerCore -> start
  }

  #
  # Positioning
  #

  { rank=same; start; containerCore }
  { rank=same; doesJobExist; userDB }
  { rank=max; 204, 404 }
}