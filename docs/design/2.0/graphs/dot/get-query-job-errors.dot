digraph {
  graph [nodesep=0.5]

  #
  # Node Definitions
  #

  # Ends
  {
    start [label=Start, color=blue]
    200 [color=green]
    403 [color=red]
    404 [color=red]
  }

  # Components
  {
    node [shape=component]
    asyncPlatform [label="Async Platform"]
  }

  # Databases
  {
    node [shape=cylinder]
    oracle [label="User DB"]
  }

  # Processes
  {
    node [shape=rectangle]
    lookupJob1 [label="Lookup job in User DB"]
    lookupJob2 [label="Lookup job in platform"]
    getError   [label="Get error file"]
  }

  # Decisions
  {
    node [shape=diamond]
    doesJobExist  [label="Does job\nexist?"]
    isJobComplete [label="Is job\nstatus\n'complete'?"]
    isJobFailed   [label="Is job\nstatus\n'failed'?"]
  }

  # Layout
  {
    node [shape=square, fontcolor=white, color=white]
    A; B
  }

  #
  # Edge Definitions
  #

  # Process
  {
    start         -> lookupJob1
    lookupJob1    -> doesJobExist
    doesJobExist  -> 404         [taillabel="\nNo", color=red]
    doesJobExist  -> lookupJob2  [taillabel="Yes", color=green]
    lookupJob2    -> isJobComplete
    isJobComplete -> isJobFailed [taillabel="\nNo", color=red]
    isJobComplete -> getError    [taillabel="Yes", color=green]
    isJobFailed   -> 403         [taillabel="No", color=red]
    isJobFailed   -> getError    [taillabel="\nYes", color=green]
    getError      -> 200
  }

  #
  #
  #  TODO!!! Missing the job status check
  #
  #

  # Dependencies
  {
    edge [constraint=false, color=gray35, style=dashed]
    lookupJob1 -> oracle
    lookupJob2 -> asyncPlatform
  }

  # Layout
  {
    edge [style=invis]
    start -> A -> B
    B -> oracle -> asyncPlatform
  }

  #
  # Positioning
  #

  { rank=same; start; A; B }
  { rank=same; lookupJob1; oracle }
  { rank=same; lookupJob2; asyncPlatform }
  { rank=max; 200; 403; 404 }
}