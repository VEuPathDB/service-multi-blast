digraph {
  graph [nodesep=0.5, splines=line]

  #
  # Node Definitions
  #

  # Ends
  {
    start [label="Start", color=blue, fillcolor=blue]
    200 [color=green]
    403 [color=red]
    404 [color=red]
  }

  # Components
  {
    node [shape=component]
    asyncPlatform [label="Async Platform"]
  }

  # Databases
  {
    node [shape=cylinder]
    oracle [label="User DB"]
  }

  # Process
  {
    node [shape=rectangle]
    lookupJob1   [label="Lookup job in user DB"]
    lookupJob2   [label="Lookup job in platform"]
    getJobResult [label="Get job result"]
  }

  # Decisions
  {
    node [shape=diamond]
    doesJobExist  [label="Does job\nexist?"]
    isJobComplete [label="Is job\nstatus\n'complete'?"]
  }

  #
  # Edge Definitions
  #

  # Process
  {
    start         -> lookupJob1
    lookupJob1    -> doesJobExist
    doesJobExist  -> 404 [label="No", color=red]
    doesJobExist  -> lookupJob2 [label="Yes", color=green]
    lookupJob2    -> isJobComplete
    isJobComplete -> 403 [label="No", color=red]
    isJobComplete -> getJobResult [label="Yes", color=green]
    getJobResult  -> 200
  }

  # Dependencies
  {
    edge [constraint=false, color=gray35, style=dashed]
    lookupJob1   -> oracle
    lookupJob2   -> asyncPlatform
    getJobResult -> asyncPlatform
  }

  # Layout
  {
    edge [style=invis]
    oracle -> asyncPlatform -> 200
  }

  #
  # Positioning
  #

  { rank=max; 200; 403; 404 }
  { rank=same; lookupJob1; oracle }
  { rank=same; isJobComplete; asyncPlatform }
}