#%RAML 1.0 Extension

extends: https://raw.githubusercontent.com/VEuPathDB/docs-api-schema/v2.2.0/libraries/base-service.raml

title: MultiBlast Query Service
version: 2.0.0
mediaType: application/json

uses:
  error: https://raw.githubusercontent.com/VEuPathDB/docs-api-schema/v2.2.0/libraries/errors.raml
  lib: schema/library.raml


# ---------------------------------------------------------------------------- #
#                                                                              #
#   Job List Endpoint                                                          #
#                                                                              #
# ---------------------------------------------------------------------------- #
/jobs:
  displayName: Jobs

  get:
    displayName: Get Job List
    description: Lists the current user's collected blast query jobs.
    queryParameters:
      site:
        displayName: Target Site
        description: |
          Optionally filters the results of the job list endpoint down to only
          records relevant to the specified `TargetSite`.
        type: string
        required: false
    responses:
      200:
        description: Success
        body:
          application/json:
            type: array
            items:
              type: lib.QueryJobListEntry
            example:
            - queryJobID: 9f444b23ceec3ee5588cc4c784c16696
              site: PlasmoDB
              status: expired
              createdOn: 2020-10-31T23:00:00Z
            - queryJobID: bc49f1a3bc36cd15b84890439d19d395
              site: TriTrypDB
              status: complete
              createdOn: 2020-10-31T23:00:00Z
              userMeta:
                summary: A blast job
            - queryJobID: 297a61dda47317f11d8e50e6ab8508c9
              site: VectorBase
              status: failed
              createdOn: 2020-10-31T23:00:00Z
              userMeta:
                summary: Another blast job.
                description: This job will fail.
      401:
        description: |
          No valid user authentication provided.
        body:
          application/json:
            type: error.UnauthorizedError
      500:
        description: Server Error
        body:
          application/json:
            type: error.ServerError

  post:
    displayName: Create New Job
    description: Creates a new blast query job.
    body:
      multipart/form-data:
        type: object
        additionalProperties: false
        properties:
          config:
            displayName: Job Configuration
            type: lib.QueryJobPostRequest
            required: true
          query:
            displayName: Query File
            description: |
              Optional file upload parameter for uploading multi-blast queries.
              
              **IMPORTANT**: Either this field or the job config's `query` field
              MUST be set in order for a job to be valid.
            type: file
            required: false
    responses:
      200:
        description: |
          Query job was successfully submitted to the job queue for execution.
        body:
          application/json:
            type: lib.JobCreateResponse
      400:
        description: |
          Invalid request body or parameters.
        body:
          application/json:
            type: error.BadRequestError
      401:
        description: |
          No valid user authentication provided.
        body:
          application/json:
            type: error.UnauthorizedError
      409:
        description: |
          Job already exists and is owned by the current user.
        body:
          application/json:
            type: error.ConflictError
      422:
        description: |
          Invalid job configuration.
        body:
          application/json:
            type: error.UnprocessableEntityError


# ---------------------------------------------------------------------------- #
#                                                                              #
#   Job By ID                                                                  #
#                                                                              #
# ---------------------------------------------------------------------------- #
/jobs/{job-id}:
  displayName: Job By ID
  description: |
    Operations on a singular job identified by the `{job-id}` URI parameter.

  uriParameters:
    job-id:
      type: string
      pattern: ^[\dA-Fa-f]{32}$
      minLength: 32
      maxLength: 32

  get:
    displayName: Get Job Details
    description: |
      Returns details about the target job.
    
      As a side effect, interactions with this endpoint will cause the target
      job to be added to the requesting user's job collection if it was not
      already present in that user's collection.  This default behavior can be
      defeated by setting the `save_job` query parameter to `false`.
      
      The reason this is done is to maintain a legacy job sharing behavior where
      a job is "shared with" a user automatically when they follow a link to
      that job.
    queryParameters:
      save_job:
        displayName: Save Job
        description: |
          Flag that specifies whether the requested job should be saved to the
          user's job collection.
          
          To maintain legacy job sharing behavior, this parameter defaults to
          `true`.
        type: boolean
        default: true
        required: false
    responses:
      200:
        description: Success
        body:
          application/json:
            type: lib.QueryJobDetails
      401:
        description: |
          No valid user authentication provided.
        body:
          application/json:
            type: error.UnauthorizedError
      404:
        description: |
          Target job does not exist.
        body:
          application/json:
            type: error.NotFoundError
      500:
        description: Server Error
        body:
          application/json:
            type: error.ServerError

  post:
    displayName: Restart Job
    description: Causes the target job to be restarted (if it is expired).
    responses:
      204:
        description: Job was successfully requeued for execution.
      401:
        description: |
          No valid user authentication provided.
        body:
          application/json:
            type: error.UnauthorizedError
      403:
        description: |
          Forbidden.
          Returned when attempting to restart a job that has not yet expired.
        body:
          application/json:
            type: error.ForbiddenError
      404:
        description: |
          Target job does not exist in the user's job collection.
        body:
          application/json:
            type: error.NotFoundError
      410:
        description: |
          Gone.
          
          The BLAST+ target databases that the target job was originally run
          against no longer exist on this server.
        body:
          application/json:
            type: error.GoneError

      500:
        description: Server Error
        body:
          application/json:
            type: error.ServerError

  patch:
    displayName: Update Job
    description: Updates a user's job.
    body:
      application/json:
        type: lib.QueryJobPatchRequest
    responses:
      204:
        description: |
          Success.
          
          The user's job record was successfully updated.
      400:
        description: |
          Bad Request.
          
          The request did not resemble or could not be parsed as the expected
          type.
        body:
          application/json:
            type: error.BadRequestError
      401:
        description: |
          No valid user authentication provided.
        body:
          application/json:
            type: error.UnauthorizedError
      404:
        description: |
          Target job does not exist in the user's job collection.
        body:
          application/json:
            type: error.NotFoundError
      422:
        description: |
          Invalid job configuration.
        body:
          application/json:
            type: error.UnprocessableEntityError
      500:
        description: Server Error
        body:
          application/json:
            type: error.ServerError

  delete:
    displayName: Delete Job
    description: Deletes the target job from the user's job collection.
    responses:
      204:
        description: |
          Job was successfully deleted from the user's job collection.
          
          This does not mean the job was deleted, it will continue to exist
          until it expires.
          
          If a user deletes a job from their job collection but then re-accesses
          that job by job-url, the job will be re-added to their collection.
      401:
        description: |
          No valid user authentication provided.
        body:
          application/json:
            type: error.UnauthorizedError
      404:
        description: |
          Target job does not exist in the user's job collection.
        body:
          application/json:
            type: error.NotFoundError
      500:
        description: Server Error
        body:
          application/json:
            type: error.ServerError


# ---------------------------------------------------------------------------- #
#                                                                              #
#   Job Query Retrieval Endpoint                                               #
#                                                                              #
# ---------------------------------------------------------------------------- #
/jobs/{job-id}/query:
  displayName: Job Query
  uriParameters:
    job-id:
      type: string
      pattern: ^[\dA-Fa-f]{32}$
      minLength: 32
      maxLength: 32

  get:
    displayName: Get Query
    description: |
      Returns the query for the target job, optionally as a download.
    queryParameters:
      download:
        displayName: Download
        description: |
          If set to true, the server will send a `Content-Disposition`
          header in the response indicating that the query file should be
          downloaded rather than rendered.
        type: boolean
        default: false
    responses:
      200:
        description: Success
        headers:
          Content-Disposition:
            description: |
              Present if the `download` query param was sent in with the
              request.
            type: string
            required: false
        body:
          text/plain:
            type: file
            displayName: Job Query
            description: Raw query text
      401:
        description: Unauthorized
        body:
          application/json:
            type: error.UnauthorizedError
      404:
        description: Not Found
        body:
          application/json:
            type: error.NotFoundError
      500:
        description: Server Error
        body:
          application/json:
            type: error.ServerError

# ---------------------------------------------------------------------------- #
#                                                                              #
#   Job Result Retrieval Endpoint                                              #
#                                                                              #
# ---------------------------------------------------------------------------- #
/jobs/{job-id}/result:
  displayName: Job Result
  uriParameters:
    job-id:
      type: string
      pattern: ^[\dA-Fa-f]{32}$
      minLength: 32
      maxLength: 32
  get:
    displayName: Download Job Result
    description: |
      Downloads the ASN1 result from the blast query execution.
    queryParameters:
      download:
        displayName: Download
        description: |
          If set to true, the server will send a `Content-Disposition`
          header in the response indicating that the result file should be
          downloaded rather than rendered.
        type: boolean
        default: false
    responses:
      200:
        description: Success
        headers:
          Content-Disposition:
            description: |
              Sent to indicate the result is to be downloaded rather than
              rendered in the browser.
            type: string
            required: true
        body:
          text/plain:
            type: file
            displayName: Job Result
            description: Raw job result.
      401:
        description: |
          No valid user authentication provided.
        body:
          application/json:
            type: error.UnauthorizedError
      403:
        description: |
          Forbidden.
          
          Returned when attempting to download the result for a job that has not
          yet completed.
        body:
          application/json:
            type: error.ForbiddenError
      404:
        description: |
          Target job does not exist in the user's job collection.
        body:
          application/json:
            type: error.NotFoundError
      500:
        description: Server Error
        body:
          application/json:
            type: error.ServerError


# ---------------------------------------------------------------------------- #
#                                                                              #
#    stderr retrieval                                                          #
#                                                                              #
# ---------------------------------------------------------------------------- #
/jobs/{job-id}/stderr:
  displayName: Job STDERR Output

  uriParameters:
    job-id:
      displayName: Query Job ID
      type: string
      required: false
      minLength: 32
      maxLength: 32
      pattern: '^[\dA-Fa-f]{32}$'

  get:
    displayName: Get STDERR Output
    description: |
      Returns the stderr output for the blast tool execution for this job.
      
      This output may be empty.
    queryParameters:
      download:
        displayName: Download
        description: |
          When set to true, indicates that the service should mark the returned
          file as an attachment using the `Content-Disposition` header to cause
          the file to be downloaded by the browser rather than rendered.
        type: boolean
        required: false
        default: false
    responses:
      200:
        description: Success
        headers:
          Content-Disposition:
            description: |
              Present if the `download` query parameter was sent in with the
              request.
            type: string
            required: false
        body:
          text/plain:
            type: file
            example: |
              FASTA-Reader: Ignoring invalid residues at position(s): On line 1: 1, 62-63
              FASTA-Reader: Ignoring invalid residues at position(s): On line 2: 44-46
              FASTA-Reader: Ignoring invalid residues at position(s): On line 3: 27-29
              FASTA-Reader: Ignoring invalid residues at position(s): On line 4: 10-12, 73-75
              FASTA-Reader: Ignoring invalid residues at position(s): On line 5: 56-58
              FASTA-Reader: Ignoring invalid residues at position(s): On line 6: 39-41
      401:
        description: |
          No valid user authentication provided.
        body:
          application/json:
            type: error.UnauthorizedError
      403:
        description: |
          Forbidden.
          
          Returned when attempting to list the files for a job that is not yet
          complete or has expired.
        body:
          application/json:
            type: error.ForbiddenError
      404:
        description: |
          Target job does not exist.
        body:
          application/json:
            type: error.NotFoundError
      500:
        description: Server Error
        body:
          application/json:
            type: error.ServerError


# ---------------------------------------------------------------------------- #
#                                                                              #
#   Bulk Status Lookup Endpoint                                                #
#                                                                              #
# ---------------------------------------------------------------------------- #
/statuses:
  displayName: Bulk Statuses

  post:
    displayName: Bulk Status Lookup
    description: |
      Lookup the statuses for the list of job IDs posted.
      
      The response will be a mapping whose keys are the posted job IDs and
      whose values are the status of the job represented by the associated ID.
      
      If a job ID in the input list does not appear to be a real/valid job ID,
      the ID will be omitted from the response object.
      
      Each status value will be a valid JobStatus enum item, meaning they will
      each be one of:
      
      * "queued"
      * "in-progress"
      * "complete"
      * "failed"
      * "expired"
    body:
      application/json:
        type: array
        items:
          type: string
          minLength: 32
          maxLength: 32
          pattern: '^[\dA-Fa-f]{32}$'
        example:
        - dd6060e5367622e574ffb38f32bfa049
        - 77542f92d9e68ea80eff4852ecc41fa4
        - 29e07b0b80181222ad33cbc8f679d672
        - 748ba381dd81bb8de615319837ffa350
        - f4757ea84c455b04a1d307d4ac33049d
    responses:
      200:
        description: Success
        body:
          application/json:
            type: lib.JobBulkStatusResponse
            example:
              dd6060e5367622e574ffb38f32bfa049: queued
              29e07b0b80181222ad33cbc8f679d672: complete
              748ba381dd81bb8de615319837ffa350: in-progress
              f4757ea84c455b04a1d307d4ac33049d: expired


      500:
        description: |
          Internal Server Error
          
          An unexpected exception was thrown while attempting to process
          the request.
        body:
          application/json:
            type: error.ServerError

/targets:
  displayName: Target Index
  get:
    displayName: Get Target Index
    description:
      Retrieves an index of all the available blast targets.
    responses:
      200:
        description: Success
        body:
          application/json:
            type: lib.BlastTargetIndex
            example:
              PlasmoDB:
                Pberghei:
                  naTargets:
                  - PbergheiESTs
                PfalciparumGB4:
                  naTargets:
                  - PfalciparumGB4AnnotatedCDSs
                  - PfalciparumGB4AnnotatedTranscripts
                  - PfalciparumGB4Genome
                  aaTargets:
                  - PfalciparumGB4AnnotatedProteins

/link-guest:
  displayName: Link Guest
  post:
    displayName: Post Link
    description: |
      A request to transfer ownership of jobs from a guest user to a logged in
      user, linking the logged in user to the jobs they created before they
      logged in.
    body:
      application/json:
        type: lib.GuestJobTransferRequest
    responses:
      204:
        description: Success
      400:
        description: |
          Bad Request.
          
          Request body did not resemble the expected form.
        body:
          application/json:
            type: error.BadRequestError
      401:
        description: |
          No valid user authentication provided.
        body:
          application/json:
            type: error.UnauthorizedError
      403:
        description: "Forbidden: Target user ID was not a guest user ID."
        body:
          application/json:
            type: error.ForbiddenError
      500:
        description: Internal Server Error
        body:
          application/json:
            type: error.ServerError

/maintenance/cache:
  displayName: Cache Maintenance

  delete:
    displayName: Delete Minio Cache
    description: |
      Deletes all jobs in the job cache.  This endpoint is to be used during
      site releases to clear any old data that may have been invalidated by
      the changes to the underlying site data.

    headers:
      Admin-Token:
        type: string

    responses:
      204:
        description: Success
      401:
        description: |
          Invalid Admin-Token token value.
        body:
          application/json:
            type: error.UnauthorizedError
      500:
        description: Internal Server Error
        body:
          application/json:
            type: error.ServerError

  /{job-id}:
    displayName: Job Cache Maintenance
    description: Deletes the target job from the cache.

    uriParameters:
      job-id:
        displayName: Job ID
        type: string
        required: false
        minLength: 32
        maxLength: 32
        pattern: '^[\dA-Fa-f]{32}$'

    delete:
      displayName: Delete Job Cache

      headers:
        Admin-Token:
          type: string

      responses:
        204:
          description: Success
        401:
          description: |
            Invalid Admin-Token token value.
          body:
            application/json:
              type: error.UnauthorizedError
        500:
          description: Internal Server Error
          body:
            application/json:
              type: error.ServerError

/maintenance/broken-jobs:
  displayName: Broken Jobs

  get:
    displayName: List
    description: |
      Lists job IDs for jobs owned by the current campus that are in the
      "failed" status.
    headers:
      Admin-Token:
        type: string
    responses:
      200:
        description: Success
        body:
          application/json:
            type: lib.BrokenJobListEntry[]
      401:
        description: |
          Invalid Admin-Token token value.
        body:
          application/json:
            type: error.UnauthorizedError
      500:
        description: Internal Server Error
        body:
          application/json:
            type: error.ServerError
