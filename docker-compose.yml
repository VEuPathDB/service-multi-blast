version: "3.5"

services:
  # #
  # Public facing REST API
  # #
  service:
    image: veupathdb/mblast-http-service:${SERVICE_TAG:-latest}
    environment:
      AUTH_SECRET_KEY: ${AUTH_SECRET_KEY}
      SERVER_PORT: ${SERVER_PORT:-80}
      LDAP_SERVER: ${LDAP_SERVER}
      ORACLE_BASE_DN: ${ORACLE_BASE_DN}

      # Account Database
      ACCT_DB_TNS_NAME: ${ACCT_DB_TNS_NAME}
      ACCT_DB_USER: ${ACCT_DB_USER}
      ACCT_DB_PASS: ${ACCT_DB_PASS}

      # User Database
      USER_DB_TNS_NAME: ${USER_DB_TNS_NAME}
      USER_DB_USER: ${USER_DB_USER}
      USER_DB_PASS: ${USER_DB_PASS}

      # Queue Connection
      QUEUE_HOST: ${QUEUE_HOST:-queue}

      # Misc Config
      JOB_MOUNT_PATH: ${JOB_MOUNT_PATH:-/out}
      DB_MOUNT_PATH: ${DB_MOUNT_PATH:-/db}
      DB_BUILD: ${DB_BUILD}
      BLAST_HOST: ${BLAST_HOST:-blast}
      BLAST_QUEUE_NAME: ${BLAST_QUEUE_NAME:-blast}
      BLAST_JOB_CATEGORY: ${BLAST_JOB_CATEGORY:-blast}

      FORMATTER_HOST: ${FORMATTER_HOST:-formatter}
      FORMAT_QUEUE_NAME: ${FORMAT_QUEUE_NAME:-format}
      FORMAT_JOB_CATEGORY: ${FORMAT_JOB_CATEGORY:-format}

      VALIDATOR_HOST: ${VALIDATOR_HOST:-validator}

      # JVM Config
      XMX: ${SERVICE_XMX:-256M}
      XMS: ${SERVICE_XMS:-64M}

      # Job Config
      #
      # These options configure the validation/management of jobs.
      JOB_TIMEOUT: ${JOB_TIMEOUT:-5} #days
      MAX_QUERIES_PER_REQUEST: ${MAX_QUERIES_PER_REQUEST:-100}
      MAX_RESULTS_PER_QUERY: ${MAX_RESULTS_PER_QUERY:-10000}
      MAX_INPUT_QUERY_SIZE: ${MAX_INPUT_QUERY_SIZE:-3145728} # 3MiB
      MAX_NA_SEQ_SIZE: ${MAX_NA_SEQ_SIZE:-1048576} # 1MiB
      MAX_AA_SEQ_SIZE: ${MAX_AA_SEQ_SIZE:-102400} # 100KiB

    volumes:
      - type: volume
        source: job-data
        target: /out
        # Replace `source` with the path to the blast db files available in your
        # work environment.
      - type: bind # volume
        source: ${BLAST_DATA:-/tmp/blast-data} 
        target: /db
        read_only: true
    labels:
    - "com.centurylinklabs.watchtower.enable=${SERVICE_WATCHTOWER:-false}"
    - "traefik.http.services.${TRAEFIK_MBLAST_SERVICE_ROUTER:-mblast-dev}.loadbalancer.server.port=80"
    - "traefik.http.routers.${TRAEFIK_MBLAST_SERVICE_ROUTER:-mblast-dev}.rule=Host(`${TRAEFIK_MBLAST_SERVICE_HOST:-mblast-dev.local.apidb.org}`)"
    - "traefik.http.routers.${TRAEFIK_MBLAST_SERVICE_ROUTER:-mblast-dev}.tls=true"
    - "traefik.http.routers.${TRAEFIK_MBLAST_SERVICE_ROUTER:-mblast-dev}.entrypoints=${TRAEFIK_ENTRYPOINTS:-local}"
    - "prometheus.scrape_enabled=true"
    - "traefik.docker.network=traefik"

    depends_on:
      - queue
      - formatter

    restart: on-failure:5
    networks:
      - traefik
      - internal
      - monitoring-ext

  # #
  # Blast Query Runner (Job Queue Managed)
  # #
  blast:
    image: veupathdb/mblast-blast-query:${BLAST_TAG:-latest}
    environment:
      DB_MOUNT_PATH: /db
      JOB_MOUNT_PATH: /out
    volumes:
      - type: volume
        source: job-data
        target: /out
        # Replace `source` with the path to the blast db files available in your
        # work environment.
      - type: bind # volume
        source: ${BLAST_DATA:-/tmp/blast-data} 
        target: /db
        read_only: true
      # because the ncbi/blast container is based on gcloud-sdk it creates a
      # volume in /root/.confg.  We don't care about this, we configure a
      # volume so that it is at least tied to the project, instead of a hash.
      - type: volume
        source: gcloud-config
        target: /root/.config
        read_only: true
    labels:
    - "com.centurylinklabs.watchtower.enable=${BLAST_WATCHTOWER:-false}"
    - "prometheus.scrape_enabled=true"

    networks:
      - internal
      - external
      - monitoring-ext

  # #
  # Blast Result Formatter
  # #
  formatter:
    image: veupathdb/mblast-blast-formatter:${FORMATTER_TAG:-latest}
    environment:
      DB_MOUNT_PATH: /db
      JOB_MOUNT_PATH: /out
    volumes:
      - type: volume
        source: job-data
        target: /out
        # Replace `source` with the path to the blast db files available in your
        # work environment.
      - type: bind # volume
        source: ${BLAST_DATA:-/tmp/blast-data} 
        target: /db
        read_only: true
      # because the ncbi/blast container is based on gcloud-sdk it creates a
      # volume in /root/.confg.  We don't care about this, we configure a
      # volume so that it is at least tied to the project, instead of a hash.
      - type: volume
        source: gcloud-config
        target: /root/.config
        read_only: true
    labels:
    - "com.centurylinklabs.watchtower.enable=${FORMATTER_WATCHTOWER:-false}"

    networks:
      - internal
      - external

  # #
  # MySQL backing database queue persistence
  # #
  queue-db:
    image: veupathdb/mblast-queue-db:${QUEUE_DB_TAG:-latest}
    environment:
      # Root user password (IT'S A SECRET TO EVERYBODY)
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      # Service user username
      QUEUE_DB_USER: ${QUEUE_DB_USER:-queue}
      # Service user password
      QUEUE_DB_PASS: ${QUEUE_DB_PASS}
    volumes:
      - type: volume
        source: mysql-data
        target: /var/lib/mysql
    labels:
    - "com.centurylinklabs.watchtower.enable=${QUEUE_DB_WATCHTOWER:-false}"

    networks:
      - internal

  # #
  # Job Queue
  # #
  queue:
    image: veupathdb/mblast-blast-queue:${QUEUE_TAG:-latest}
    environment:
      # REQUIRED!
      # Specifies a data source name for the job queue and the repository
      # database in a form user:password@tcp(mysql_host:mysql_port)/database?options
      #
      # The password value here must match the `MYSQL_PASSWORD` value for
      # the queue-db container.
      FIREWORQ_MYSQL_DSN: queue:${QUEUE_DB_PASS}@tcp(queue-db:3306)/queue #${FIREWORQ_MYSQL_DSN} # queue:<some password here>@tcp(queue-db:3306)/queue

      # Configures the number of simultaneous blast jobs that can be run
      FIREWORQ_QUEUE_DEFAULT_MAX_WORKERS: ${FIREWORQ_QUEUE_DEFAULT_MAX_WORKERS:-5}

      FIREWORQ_BIND: ${FIREWORQ_BIND:-0.0.0.0:80}
      FIREWORQ_DRIVER: ${FIREWORQ_DRIVER:-mysql}
    depends_on:
      - queue-db
      - blast
      - formatter
      - validator
    networks:
      - internal
    labels:
      - "com.centurylinklabs.watchtower.enable=${QUEUE_WATCHTOWER:-false}"

  validator:
    image: veupathdb/mblast-blast-validator:${VALIDATOR_TAG:-latest}
    networks:
      - internal
    labels:
      - "com.centurylinklabs.watchtower.enable=${VALIDATOR_WATCHTOWER:-false}"

volumes:
  job-data:
  mysql-data:
  gcloud-config:


networks:
# external network used for containers that need to reach the interenet
# (notably ncbi/blast based images)
  external:
  internal:
    internal: true
  traefik:
    external: true
  monitoring-ext:
    external: true

