#%RAML 1.0 Extension

extends: https://raw.githubusercontent.com/VEuPathDB/docs-api-schema/v2.0.1/libraries/base-service.raml

title: Multi-Blast Service
version: 1.0.0
mediaType: application/json

uses:
  error: https://raw.githubusercontent.com/VEuPathDB/docs-api-schema/v2.0.1/libraries/errors.raml

securitySchemes:
  header-auth:
    description: Authentication based on a WDK auth cookie.
    type:
      x-custom
    describedBy:
      headers:
        Auth_Key:
          description: Authorization header.
          type: string


/jobs:
  displayName: Job Management
  post:
    displayName: Create Job
    body:
      application/json:
        type: NewJobPostRequestJSON
        examples:
          Simple:
            site: PlasmoDB
            target: some-file-name
            config:
              tool: blastn
              query: "TODO: What do these queries even look like?"
          Custom Default Format:
            site: PlasmoDB
            target: some-file-name
            config:
              tool: blastp
              query: "TODO: What do these queries even look like?"
              outFmt:
                format: csv
                fields:
                  - qseqid
                  - qacc
                  - sseqid
                  - score
                  - length
      multipart/form-data:
        type: NewJobPostRequestMultipart
    responses:
      200:
        body: NewJobPostResponse
      400:
        body: error.BadRequestError
      401:
        body: error.UnauthorizedError
      422:
        body: error.UnprocessableEntityError
      500:
        body: error.ServerError


  /{job-id}:
    displayName: Job Lookup
    uriParameters:
      job-id: JobID

    get:
      displayName: Get Job Info
      responses:
        200:
          body: GetJobResponse
        401:
          body: error.UnauthorizedError
        500:
          body: error.ServerError

    /report:
      displayName: Job Report
      get:
        displayName: Get Job Report
        queryParameters:
          format?:
            type: InputBlastFormat
          fields?:
            type: array
            items: InputBlastFmtField
            uniqueItems: true
            minItems: 1
        responses:
          200:
            headers:
              Content-Disposition:
                type: string
                pattern: 'attachment; filename="([^"]+)"'
            body:
              text/plain: any
              application/json:
                displayName: JSON report output
                description: |
                  Used for the following report types:

                  - `seqalign-json`
                  - `multi-file-json`
                  - `single-file-json`
                type: any
              application/xml:
                displayName: XML report output
                description: |
                  Used for the following report types:

                  - `xml`
                  - `multi-file-xml2`
                  - `single-file-xml2`
                type: any
              application/octet-stream:
                displayName: Binary report output
                type: any
          401:
            body: error.UnauthorizedError
          500:
            body: error.ServerError

/meta:
  displayName: Service Information
  get:
    displayName: Get Service Meta
    queryParameters:
      site:
        description: |
          Filter the returned targets by the given site name.

          This query param is case insensitive.
        type: string
        examples:
          "1": PlasmoDB
          "2": toxodb
    responses:
      200:
        body: MetaResponse
      401:
        body: error.UnauthorizedError
      500:
        body: error.ServerError


## BEGIN HACK ##################################################################

################################################################################
#                                                                              #
#  DO NOT EDIT THIS FILE; IT WAS GENERATED AUTOMATICALLY.                      #
#  CHANGES MADE HERE WILL BE LOST.                                             #
#                                                                              #
################################################################################

types:
  InputBlastpConfig:
    type: InputBlastConfig
    discriminatorValue: blastp
    additionalProperties: false
    properties:
      task?:
        description: |
          Default value: `blastp`
        type: InputBlastpTask
      wordSize?:
        description: |
          Word size of initial match. Valid word sizes are 2-7.

          Default value by task:

          | Task           | Value |
          |----------------|-------|
          | `blastp`       | 3     |
          | `blastp-short` | 2     |
          | `blastp-fast`  | 6     |

          Applies to task(s): all
        type: integer
        format: int8
        minimum: 2
        maximum: 7
      gapOpen?:
        description: |
          Cost to open a gap.

          Default value by task:

          | Task           | Value |
          |----------------|-------|
          | `blastp`       | 11    |
          | `blastp-short` | 9     |

          Applies to task(s): `blastp`, `blastp-short`
        type: integer
        format: int8
        minimum: 1
      gapExtend?:
        description: |
          Cost to extend a gap.

          Default value by task:

          | Task           | Value |
          |----------------|-------|
          | `blastp`       | 1     |
          | `blastp-short` | 1     |

          Applies to task(s): `blastp`, `blastp-short`
        type: integer
        format: int8
        default: 1
        minimum: 1
      matrix?:
        description: |
          Scoring matrix name.

          Default value by task:

          | Task           | Value    |
          |----------------|----------|
          | `blastp`       | BLOSUM62 |
          | `blastp-short` | PAM30    |

          Applies to task(s): `blastp`, `blastp-short`
        type: InputBlastScoringMatrix
      threshold?:
        description: |
          Minimum score to add a word to the BLAST lookup table.

          Default value by task:

          | Task           | Value |
          |----------------|-------|
          | `blastp`       | 11    |
          | `blastp-short` | 16    |
          | `blastp-fast`  | 21    |

          Applies to task(s): all
        type: integer
        format: int8
        minimum: 1
      compBasedStats?:
        description: |
          Use composition-based statistics.

          Default value by task:

          | Task           | Value                                     |
          |----------------|-------------------------------------------|
          | `blastp`       | `conditional-comp-based-score-adjustment` |
          | `blastp-short` | `none`                                    |
          | `blastp-fast`  | `conditional-comp-based-score-adjustment` |

          Applies to task(s): all
        type: InputBlastCompBasedStats
      seg?:
        description: |
          Filter query sequence with SEG.

          Applies to task(s): all
        type: InputBlastSegMask
        default:
          enabled: false
          window: 12
          locut: 2.2
          hicut: 2.5
      softMasking?:
        description: |
          Apply filtering locations as soft masks (i.e., only for finding initial
          matches).

          Applies to task(s): blastp
        type: boolean
        default: false
      lcaseMasking?:
        description: |
          Use lower case filtering in query and subject sequence(s).

          Applies to task(s): all
        type: boolean
        default: false
      dbSoftMask?:
        description: |
          Filtering algorithm ID to apply to the BLAST database as soft mask (i.e.,
          only for finding initial matches).

          Applies to task(s): all
        type: integer
        format: int64
      dbHardMask?:
        description: |
          Filtering algorithm ID to apply to the BLAST database as hard mask (i.e.,
          sequence is masked for all phases of search).

          Applies to task(s): all
        type: integer
        format: int64
      xdropGapFinal?:
        description: |
          Heuristic value (in bits) for final gapped alignment.

          Applies to task(s): all
        type: number
        format: double
        default: 25.0
      windowSize?:
        description: |
          Multiple hits window size, use 0 to specify 1-hit algorithm.

          Default value by task:

          | Task           | Value |
          |----------------|-------|
          | `blastp`       | 40    |
          | `blastp-short` | 15    |
          | `blastp-fast`  | 40    |

          Applies to task(s): all
        type: integer
        format: int16
        minimum: 0
      useSwTBack?:
        description: |
          Compute locally optimal Smith-Waterman alignments?

          Applies to task(s): all
        type: boolean
        default: false
  InputBlastpTask:
    description: |
      | Task           | Use Case                                                 |
      |----------------|----------------------------------------------------------|
      | `blastp`       |  for standard protein-protein comparisons                |
      | `blastp-short` | optimized for query sequences shorter than 30 residues   |
      | `blastp-fast`  | a faster version that uses a larger word-size per https://www.ncbi.nlm.nih.gov/pubmed/17921491 |
    type: string
    enum:
      - blastp
      - blastp-short
      - blastp-fast
  InputBlastnConfig:
    type: InputBlastConfig
    discriminatorValue: blastn
    additionalProperties: false
    properties:
      task?:
        description: |
          Default value: `blastn`
        type: InputBlastnTask
      wordSize?:
        description: |
          Default value by task:

          | Task           | Value | Notes                          |
          |----------------|-------|--------------------------------|
          | `megablast`    | 28    | Length of initial exact match. |
          | `dc-megablast` | 11    | Number of matching nucleotides in initial match. dc-megablast allows non-consecutive letters to match. |
          | `blastn`       | 11    | Length of initial exact match. |
          | `blastn-short` | 7     | Length of initial exact match. |

          Applies to task(s): all
        type: integer
        format: int16
        minimum: 1
      gapOpen?:
        description: |
          Cost to open a gap. See appendix “BLASTN reward/penalty values” in the
          NCBI blast docs.

          Default value by task:

          | Task           | Value |
          |----------------|-------|
          | `megablast`    | 0     |
          | `dc-megablast` | 5     |
          | `blastn`       | 5     |
          | `blastn-short` | 5     |

          Applies to task(s): all
        type: integer
        format: int8
        minimum: 0
      gapExtend?:
        description: |
          Cost to extend a gap. This default is a function of reward/penalty value.
          See appendix “BLASTN reward/penalty values” in the NCBI blast docs.

          Default value by task:

          | Task           | Value | Notes                                               |
          |----------------|-------|-----------------------------------------------------|
          | `megablast`    | *     | This default is a function of reward/penalty value. |
          | `dc-megablast` | 2     |                                                     |
          | `blastn`       | 2     |                                                     |
          | `blastn-short` | 2     |                                                     |

          Applies to task(s): all
        type: integer
        format: int8
        minimum: 1
      reward?:
        description: |
          Reward for a nucleotide match.

          Default value by task:

          | Task           | Value |
          |----------------|-------|
          | `megablast`    | 1     |
          | `dc-megablast` | 2     |
          | `blastn`       | 2     |
          | `blastn-short` | 1     |

          Applies to task(s): all
        type: integer
        format: int8
        minimum: 1
      penalty?:
        description: |
          Penalty for a nucleotide mismatch.

          Default value by task:

          | Task           | Value |
          |----------------|-------|
          | `megablast`    | -2    |
          | `dc-megablast` | -3    |
          | `blastn`       | -3    |
          | `blastn-short` | -3    |

          Applies to task(s): all
        type: integer
        format: int8
        maximum: -1
      strand?:
        description: |
          Query strand(s) to search against database/subject. Choice of both, minus,
          or plus.

          Applies to task(s): all

          Default value: `both`
        type: InputBlastStrand
      dust?:
        description: |
          Filter query sequence with dust.

          Applies to task(s): all
        type: InputBlastnDust
        default:
          enable: true
          level: 20
          window: 64
          linker: 1
      filteringDb?:
        description: |
          Mask query using the sequences in this database.

          Applies to task(s): all
        type: string
      windowMaskerTaxid?:
        description: |
          Enable WindowMasker filtering using a Taxonomic ID.

          Applies to task(s): all
        type: integer
        format: int64
        minimum: 1
      windowMaskerDb?:
        description: |
          Enable WindowMasker filtering using this file.

          Applies to task(s): all
        type: string
      softMasking?:
        description: |
          Apply filtering locations as soft masks (i.e., only for finding initial
          matches).

          Applies to task(s): all
        type: boolean
        default: true
      lcaseMasking?:
        description: |
          Use lower case filtering in query and subject sequence(s).

          Applies to task(s): all
        type: boolean
        default: false
      dbSoftMask?:
        description: |
          Filtering algorithm ID to apply to the BLAST database as soft mask (i.e.,
          only for finding initial matches).

          Applies to task(s): all
        type: integer
      dbHardMask?:
        description: |
          Filtering algorithm ID to apply to the BLAST database as hard mask (i.e.,
          sequence is masked for all phases of search).

          Applies to task(s): all
        type: integer
        minimum: 1
        format: int64
      percIdentity?:
        description: |
          Percent identity cutoff.

          Applies to task(s): all
        type: integer
        default: 0
        minimum: 0
      templateType?:
        description: |
          Discontiguous MegaBLAST template type.

          Applies to task(s): dc-megablast

          Default value: `coding`
        type: InputBlastDcTemplateType
      templateLength?:
        description: |
          Discontiguous MegaBLAST template length.

          Applies to task(s): dc-megablast
        type: integer
        default: 18
      useIndex?:
        description: |
          Use MegaBLAST database index. Indices may be created with the makembindex application.

          Applies to task(s): megablast
        type: boolean
        default: false
      indexName?:
        description: |
          MegaBLAST database index name.

          Applies to task(s): megablast
        type: string
      xdropUngap?:
        description: |
          Heuristic value (in bits) for ungapped extensions.

          Applies to task(s): all
        type: number
        format: double
        default: 20.0
      xdropGap?:
        description: |
          Heuristic value (in bits) for preliminary gapped extensions.

          Applies to task(s): all
        type: number
        format: double
        default: 30.0
      xdropGapFinal?:
        description: |
          Heuristic value (in bits) for final gapped alignment.

          Applies to task(s): all
        type: number
        format: double
        default: 100.0
      noGreedy?:
        description: |
          Use non-greedy dynamic programming extension.

          Applies to task(s): megablast
        type: boolean
        default: false
      minRawGappedScore?:
        description: |
          Minimum raw gapped score to keep an alignment in the preliminary gapped
          and trace-back stages. Normally set based upon expect value.

          Applies to task(s): all
        type: integer
        format: int32
        minimum: 1
      ungapped?:
        description: |
          Perform ungapped alignment.

          Applies to task(s): all
        type: boolean
        default: false
      windowSize?:
        description: |
          Multiple hits window size, use 0 to specify 1-hit algorithm

          Applies to task(s): dc-megablast
        type: integer
        format: int16
        default: 40
  InputBlastnDust:
    type: object
    additionalProperties: false
    properties:
      enable?:
        type: boolean
        default: true
      level?:
        description: |
          DUST level (score threshold for subwindows).
        type: integer
        format: int16
        default: 20
      window?:
        description: |
          DUST window length.
        type: integer
        format: int16
        default: 64
      linker?:
        description: |
          DUST linker (how close masked intervals should be to get merged together).
        type: integer
        format: int16
        default: 1
  InputBlastnTask:
    description: |
      | Task           | Use Case                                                   |
      |----------------|------------------------------------------------------------|
      | `megablast`    | for very similar sequences (e.g, sequencing errors)        |
      | `dc-megablast` | typically used for inter-species comparisons               |
      | `blastn`       | the traditional program used for inter-species comparisons |
      | `blastn-short` | optimized for sequences less than 30 nucleotides           |
    type: string
    enum:
      - megablast
      - dc-megablast
      - blastn
      - blastn-short
  InputBlastDcTemplateType:
    type: string
    enum:
      - coding
      - optimal
      - both
  InputBlastxConfig:
    type: InputBlastConfig
    discriminatorValue: blastx
    additionalProperties: false
    properties:
      task?:
        description: |
          Default value: `blastx`
        type: InputBlastxTask
      wordSize?:
        description: |
          Word size for initial match. Valid word sizes are 2-7.

          Default value by task:

          | Task          | Value |
          |---------------|-------|
          | `blastx`      | 3     |
          | `blastx-fast` | 6     |

          Applies to task(s): all
        type: integer
        format: int8
        minimum: 2
        maximum: 7
      gapOpen?:
        description: |
          Cost to open a gap.

          Applies to task(s): all
        type: integer
        format: int8
        default: 11
        minimum: 1
      gapExtend?:
        description: |
          Cost to extend a gap.

          Applies to task(s): all
        type: integer
        format: int8
        minimum: 1
        default: 1
      matrix?:
        description: |
          Scoring matrix name.

          Applies to task(s): all

          Default value: `BLOSUM62`
        type: InputBlastScoringMatrix
      threshold?:
        description: |
          Minimum score to add a word to the BLAST lookup table.

          Default value by task:

          | Task          | Value |
          |---------------|-------|
          | `blastx`      | 12    |
          | `blastx-fast` | 21    |

          Applies to task(s): all
        type: integer
        format: int8
        minimum: 1
      seg?:
        description: |
          Filter query sequence with SEG.

          Applies to task(s): all
        type: InputBlastSegMask
        default:
          enabled: false
          window: 12
          locut: 2.2
          hicut: 2.5
      softMasking?:
        description: |
          Apply filtering locations as soft masks (i.e., only for finding initial
          matches).

          Applies to task(s): all
        type: boolean
        default: false
      lcaseMasking?:
        description: |
          Use lower case filtering in query and subject sequence(s).

          Applies to task(s): all
        type: boolean
        default: false
      dbSoftMask?:
        description: |
          Filtering algorithm ID to apply to the BLAST database as soft mask (i.e.,
          only for finding initial matches).

          Applies to task(s): all
        type: integer
        format: int64
      dbHardMask?:
        description: |
          Filtering algorithm ID to apply to the BLAST database as hard mask (i.e.,
          sequence is masked for all phases of search).

          Applies to task(s): all
        type: integer
        format: int64
      xdropGapFinal?:
        description: |
          Heuristic value (in bits) for final gapped alignment.

          Applies to task(s): all
        type: number
        format: double
        default: 25.0
      windowSize?:
        description: |
          Multiple hits window size, use 0 to specify 1-hit algorithm.

          Applies to task(s): all
        type: integer
        format: int16
        minimum: 0
        default: 40
      strand?:
        description: |
          Query strand(s) to search against database/subject. Choice of both, minus,
          or plus.

          Applies to task(s): all

          Default value: `both`
        type: InputBlastStrand
      queryGeneticCode:
        description: |
          Genetic code to translate query, see
          ftp://ftp.ncbi.nih.gov/entrez/misc/data/gc.prt

          Applies to task(s): all
        type: integer
        format: int8
        default: 1
        minimum: 1
      maxIntronLength:
        description: |
          Length of the largest intron allowed in a translated nucleotide sequence
          when linking multiple distinct alignments (a negative value disables
          linking).

          Applies to task(s): all
        type: integer
        default: 0
        format: int32
      compBasedStats?:
        description: |
          Use composition-based statistics.

          Applies to task(s): all

          Default value: `conditional-comp-based-score-adjustment`
        type: InputBlastCompBasedStats
  InputBlastxTask:
    description: |
      | Task           | Use Case                                                 |
      |----------------|----------------------------------------------------------|
      | `blastx`       | for standard translated nucleotide-protein comparison    |
      | `blastx-fast`  | a faster version that uses a larger word-size based on https://www.ncbi.nlm.nih.gov/pubmed/17921491 |
    type: string
    enum:
      - blastx
      - blastx-fast
  InputTBlastxConfig:
    type: InputBlastConfig
    discriminatorValue: tblastx
    additionalProperties: false
    properties:
      wordSize?:
        description: |
          Word size for initial match.
        type: integer
        format: int8
        default: 3
        minimum: 2
        maximum: 7
      matrix?:
        description: |
          Scoring matrix name.

          Default value: `BLOSUM62`
        type: InputBlastScoringMatrix
      threshold?:
        description: |
          Minimum score to add a word to the BLAST lookup table.
        type: integer
        format: int8
        minimum: 1
        default: 13
      seg?:
        description: |
          Filter query sequence with SEG.
        type: InputBlastSegMask
        default:
          enabled: true
          window: 12
          locut: 2.2
          hicut: 2.5
      softMasking?:
        description: |
          Apply filtering locations as soft masks (i.e., only for finding initial
          matches).
        type: boolean
        default: false
      lcaseMasking?:
        description: |
          Use lower case filtering in query and subject sequence(s).
        type: boolean
        default: false
      strand?:
        description: |
          Query strand(s) to search against database subject sequences.

          Default value: `both`
        type: InputBlastStrand
      dbSoftMask?:
        description: |
          Filtering algorithm ID to apply to the BLAST database as soft mask (i.e.,
          only for finding initial matches).
        type: integer
        format: int64
      dbHardMask?:
        description: |
          Filtering algorithm ID to apply to the BLAST database as hard mask (i.e.,
          sequence is masked for all phases of search).
        type: integer
        format: int64
      queryGeneticCode:
        description: |
          Genetic code to translate query, see
          ftp://ftp.ncbi.nih.gov/entrez/misc/data/gc.prt
        type: integer
        format: int8
        default: 1
        minimum: 1
      dbGenCode:
        description: |
          Genetic code to translate subject sequences, see
          ftp://ftp.ncbi.nih.gov/entrez/misc/data/gc.prt
        type: integer
        format: int8
        default: 1
        minimum: 1
      maxIntronLength:
        description: |
          Length of the largest intron allowed in a translated nucleotide sequence
          when linking multiple distinct alignments (a negative value disables
          linking).
        type: integer
        default: 0
        format: int32
  InputBlastConfig:
    type: object
    additionalProperties: false
    discriminator: tool
    properties:
      tool: InputBlastTool
      #  db:
      #    description: |
      #      BLAST database name.
      #    type: string
      query?:
        description: |
          When posting a job using `application/json` this field is required.

          When posting a job using `multipart/form-data` either this field _or_ the
          query file field must be specified.
        type: string
      query_loc?:
        description: |
          Location on the query sequence.
        type: InputBlastLocation
        #  out?:
        #    description: |
        #      Output file name.
        #    type: string
        #    default: stdout
      eValue?:
        description: |
          Expect value (E) for saving hits.
        type: number
        format: double
        default: 10.0
        #  subject?:
        #    description: |
        #      File with subject sequence(s) to search.
        #    type: string
        #  subjectLoc?:
        #    description: |
        #      Location on the subject sequence.
        #    type: ext.InputBlastLocation
        #  showGIs?:
        #    description: |
        #      Show NCBI GIs in report.
        #    type: boolean
        #    default: false
      numDescriptions?:
        description: |
          Show one-line descriptions for this number of database sequences.
        type: integer
        format: int16
        default: 500
      numAlignments?:
        description: |
          Show alignments for this number of database sequences.
        type: integer
        default: 250
      maxTargetSeqs?:
        description: |
          Number of aligned sequences to keep. Use with report formats that do not
          have separate definition line and alignment sections such as tabular (all
          outfmt > 4). Not compatible with num_descriptions or num_alignments. Ties
          are broken by order of sequences in the database.
        type: integer
        default: 500
      maxHSPs?:
        description: |
          Maximum number of HSPs (alignments) to keep for any single query-subject
          pair. The HSPs shown will be the best as judged by expect value. This
          number should be an integer that is one or greater. If this option is not
          set, BLAST shows all HSPs meeting the expect value criteria. Setting it
          to one will show only the best HSP for every query-subject pair
        type: integer
        format: int16
        minimum: 1
        #  html?:
        #    description: |
        #      Produce HTML output
        #    type: boolean
        #    default: false
        #  giList?:
        #    description: |
        #      Restrict search of database to GI’s listed in this file. Local searches
        #      only.
        #    type: string
        #  negativeGIList?:
        #    description: |
        #      Restrict search of database to everything except the GI’s listed in this
        #      file. Local searches only.
        #    type: string
        #  entrezQuery?:
        #    description: |
        #      Restrict search with the given Entrez query. Remote searches only.
        #    type: string
      cullingLimit?:
        description: |
          Delete a hit that is enveloped by at least this many higher-scoring hits.
        type: integer
      bestHitOverhang?:
        description: |
          Best Hit algorithm overhang value (recommended value: 0.1)
        type: number
        format: double
      bestHitScoreEdge?:
        description: |
          Best Hit algorithm score edge value (recommended value: 0.1)
        type: number
        format: double
      dbSize?:
        description: |
          Effective size of the database
        type: integer
        format: int64
        minimum: 0
      searchSpace?:
        description: |
          Effective length of the search space
        type: integer
        format: int64
        minimum: 0
        #  importSearchStrategy?:
        #    description: |
        #      Search strategy file to read.
        #    type: string
        #  exportSearchStrategy?:
        #    description: |
        #      Record search strategy to this file.
        #    type: string
      parseDefLines?:
        description: |
          Parse query and subject bar delimited sequence identifiers (e.g.,
          gi|129295).
        type: boolean
        default: false
        #  numThreads?:
        #    description: |
        #      Number of threads (CPUs) to use in blast search.
        #    type: integer
        #    format: int8
        #    default: 1
        #    minimum: 1
      remote?:
        description: |
          Execute search on NCBI servers?
        type: boolean
        default: false
      outFmt?:
        type: InputBlastOutFmt
        examples:
          defaultValue:
            format: pairwise
            fields:
              - qseqid
              - sseqid
              - pident
              - length
              - mismatch
              - gapopen
              - qstart
              - qend
              - sstart
              - send
              - evalue
              - bitscore
  InputBlastFmtField:
    description: |
      Field Definitions:

      | Field         | Description |
      |---------------|-------------|
      | `qseqid`      | Query Seq-id |
      | `qgi`         | Query GI |
      | `qacc`        | Query accesion |
      | `sseqid`      | Subject Seq-id |
      | `sallseqid`   | All subject Seq-id(s), separated by a ';' |
      | `sgi`         | Subject GI |
      | `sallgi`      | All subject GIs |
      | `sacc`        | Subject accession |
      | `sallacc`     | All subject accessions |
      | `qstart`      | Start of alignment in query |
      | `qend`        | End of alignment in query |
      | `sstart`      | Start of alignment in subject |
      | `send`        | End of alignment in subject |
      | `qseq`        | Aligned part of query sequence |
      | `sseq`        | Aligned part of subject sequence |
      | `evalue`      | Expect value |
      | `bitscore`    | Bit score |
      | `score`       | Raw score |
      | `length`      | Alignment length |
      | `pident`      | Percentage of identical matches |
      | `nident`      | Number of identical matches |
      | `mismatch`    | Number of mismatches |
      | `positive`    | Number of positive-scoring matches |
      | `gapopen`     | Number of gap openings |
      | `gaps`        | Total number of gap |
      | `ppos`        | Percentage of positive-scoring matches |
      | `frames`      | Query and subject frames separated by a '/' |
      | `qframe`      | Query frame |
      | `sframe`      | Subject frame |
      | `btop`        | Blast traceback operations (BTOP) |
      | `staxids`     | unique Subject Taxonomy ID(s), separated by a ';'(in numerical order) |
      | `sscinames`   | unique Subject Scientific Name(s), separated by a ';' |
      | `scomnames`   | unique Subject Common Name(s), separated by a ';' |
      | `sblastnames` | unique Subject Blast Name(s), separated by a ';' (in alphabetical order) |
      | `sskingdoms`  | unique Subject Super Kingdom(s), separated by a ';' (in alphabetical order) |
      | `stitle`      | Subject Title |
      | `salltitles`  | All Subject Title(s), separated by a '<>' |
      | `sstrand`     | Subject Strand |
      | `qcovs`       | Query Coverage Per Subject (for all HSPs) |
      | `qcovhsp`     | Query Coverage Per HSP |
      | `qcovus`      | a measure of Query Coverage that counts a position in a subject sequence for this measure only once. The second time the position is aligned to the query is not counted towards this measure. |
    type: string
    enum:
      - qseqid
      - qgi
      - qacc
      - sseqid
      - sallseqid
      - sgi
      - sallgi
      - sacc
      - sallacc
      - qstart
      - qend
      - sstart
      - send
      - qseq
      - sseq
      - evalue
      - bitscore
      - score
      - length
      - pident
      - nident
      - mismatch
      - positive
      - gapopen
      - gaps
      - ppos
      - frames
      - qframe
      - sframe
      - btop
      - staxids
      - sscinames
      - scomnames
      - sblastnames
      - sskingdoms
      - stitle
      - salltitles
      - sstrand
      - qcovs
      - qcovhsp
      - qcovus
  InputBlastFormat:
    description: |
      Format Options:

      |  Enum Val                                | Meaning                             |
      |------------------------------------------|-------------------------------------|
      | `pairwise`                               | pairwise                            |
      | `query-anchored-with-identities`         | query-anchored showing identities   |
      | `query-anchored-without-identities`      | query-anchored no identities        |
      | `flat-query-anchored-with-identities`    | flat query-anchored show identities |
      | `flat-query-anchored-without-identities` | flat query-anchored no identities   |
      | `xml`                                    | XML Blast output                    |
      | `tabular`                                | tabular                             |
      | `tabular-with-comments`                  | tabular with comment lines          |
      | `text-asn-1`                             | Text ASN.1                          |
      | `binary-asn-1`                           | Binary ASN.1                        |
      | `csv`                                    | Comma-separated values              |
      | `archive-asn-1`                          | BLAST archive format (ASN.1)        |
      | `seqalign-json`                          | Seqalign (JSON)                     |
      | `multi-file-json`                        | Multiple-file BLAST JSON            |
      | `multi-file-xml2`                        | Multiple-file BLAST XML2            |
      | `single-file-json`                       | Single-file BLAST JSON              |
      | `single-file-xml2`                       | Single-file BLAST XML2              |
      | `sam`                                    | Sequence Alignment/Map (SAM)        |
      | `organism-report`                        | Organism Report                     |
    type: string
    enum:
      - pairwise
      - query-anchored-with-identities
      - query-anchored-without-identities
      - flat-query-anchored-with-identities
      - flat-query-anchored-without-identities
      - xml
      - tabular
      - tabular-with-comments
      - text-asn-1
      - binary-asn-1
      - csv
      - archive-asn-1
      - seqalign-json
      - multi-file-json
      - multi-file-xml2
      - single-file-json
      - single-file-xml2
      - sam
      - organism-report
  InputBlastOutFmt:
    description: |
      Output report format configuration.
    type: object
    additionalProperties: false
    properties:
      format?:
        description: |
          Defaults to `pairwise`
        type: InputBlastFormat
      fields?:
        description: |
          Custom output format fields.

          Allows selecting the specific fields and ordering for a report.

          **Only applicable to the `tabular`, `tabular-with-comments`, and `csv` formats.**

          Defaults to:
          ```json
          [
            "qseqid",
            "sseqid",
            "pident",
            "length",
            "mismatch",
            "gapopen",
            "qstart",
            "qend",
            "sstart",
            "send",
            "evalue",
            "bitscore"
          ]
          ```
        type: array
        items: InputBlastFmtField
        uniqueItems: true
        minItems: 1
  InputBlastLocation:
    type: object
    additionalProperties: false
    properties:
      start:
        type: integer
        format: int64
      stop:
        type: integer
        format: int64
  InputBlastTool:
    type: string
    enum:
      - blastn
      - blastp
      - blastx
      - tblastn
      - tblastx
  InputTBlastnConfig:
    type: InputBlastConfig
    discriminatorValue: tblastn
    additionalProperties: false
    properties:
      task?:
        description: |
          Default value: `tblastn`
        type: InputTBlastnTask
      wordSize?:
        description: |
          Word size for initial match. Valid word sizes are 2-7.

          Default value by task:

          | Task           | Value |
          |----------------|-------|
          | `tblastn`      | 3     |
          | `tblastn-fast` | 6     |

          Applies to task(s): all
        type: integer
        format: int8
        minimum: 2
        maximum: 7
      gapOpen?:
        description: |
          Cost to open a gap.

          Applies to task(s): all
        type: integer
        format: int8
        default: 11
        minimum: 1
      gapExtend?:
        description: |
          Cost to extend a gap.

          Applies to task(s): all
        type: integer
        format: int8
        minimum: 1
        default: 1
      matrix?:
        description: |
          Scoring matrix name.

          Applies to task(s): all

          Default value: `BLOSUM62`
        type: InputBlastScoringMatrix
      threshold?:
        description: |
          Minimum score to add a word to the BLAST lookup table.

          Default value by task:

          | Task           | Value |
          |----------------|-------|
          | `tblastn`      | 13    |
          | `tblastn-fast` | 21    |

          Applies to task(s): all
        type: integer
        format: int8
        minimum: 1
      seg?:
        description: |
          Filter query sequence with SEG.

          Applies to task(s): all
        type: InputBlastSegMask
        default:
          enabled: true
          window: 12
          locut: 2.2
          hicut: 2.5
      softMasking?:
        description: |
          Apply filtering locations as soft masks (i.e., only for finding initial
          matches).

          Applies to task(s): all
        type: boolean
        default: false
      lcaseMasking?:
        description: |
          Use lower case filtering in query and subject sequence(s).

          Applies to task(s): all
        type: boolean
        default: false
      dbSoftMask?:
        description: |
          Filtering algorithm ID to apply to the BLAST database as soft mask (i.e.,
          only for finding initial matches).

          Applies to task(s): all
        type: integer
        format: int64
      dbHardMask?:
        description: |
          Filtering algorithm ID to apply to the BLAST database as hard mask (i.e.,
          sequence is masked for all phases of search).

          Applies to task(s): all
        type: integer
        format: int64
      xdropGapFinal?:
        description: |
          Heuristic value (in bits) for final gapped alignment.

          Applies to task(s): all
        type: number
        format: double
        default: 25.0
      windowSize?:
        description: |
          Multiple hits window size, use 0 to specify 1-hit algorithm.

          Applies to task(s): all
        type: integer
        format: int16
        minimum: 0
        default: 40
      dbGenCode:
        description: |
          Genetic code to translate subject sequences, see
          ftp://ftp.ncbi.nih.gov/entrez/misc/data/gc.prt

          Applies to task(s): all
        type: integer
        format: int8
        default: 1
        minimum: 1
      maxIntronLength:
        description: |
          Length of the largest intron allowed in a translated nucleotide sequence
          when linking multiple distinct alignments (a negative value disables
          linking).

          Applies to task(s): all
        type: integer
        default: 0
        format: int32
      compBasedStats?:
        description: |
          Use composition-based statistics.

          Applies to task(s): all

          Default value: `conditional-comp-based-score-adjustment`
        type: InputBlastCompBasedStats
  InputTBlastnTask:
    description: |
      | Task           | Use Case                                                 |
      |----------------|----------------------------------------------------------|
      | `tblastn`      | for a standard protein-translated nucleotide comparison  |
      | `tblastn-fast` | for a faster version with a larger word-size based on https://www.ncbi.nlm.nih.gov/pubmed/17921491 |
    type: string
    enum:
      - tblastn
      - tblastn-fast
  NewJobPostRequestJSON:
    type: object
    additionalProperties: false
    properties:
      site:
        type: string
      organism:
      target-type:
        description: |
          Target file name.  Maps to the `--db` flag for the blast tools.
        type: string
      config:
        description: |
          Blast tool configuration.

          Must be one of the following implementation types:

          - [InputBlastnConfig](#type:InputBlastnConfig)
          - [InputBlastpConfig](#type:InputBlastpConfig)
          - [InputBlastxConfig](#type:InputBlastxConfig)
          - [InputTBlastnConfig](#type:InputTBlastnConfig)
          - [InputTBlastxConfig](#type:InputTBlastxConfig)
        type: InputBlastConfig
  NewJobPostRequestMultipart:
    type: object
    additionalProperties: false
    properties:
      file: file
      properties: NewJobPostRequestJSON
  NewJobPostResponse:
    type: object
    additionalProperties: false
    properties:
      jobId: JobID
  MetaResponse:
    type: object
    additionalProperties: false
    properties:
      targets: OutputSiteListing
  GetJobResponse:
    type: object
    additionalProperties: false
    properties:
      id: JobID
      status: JobStatus
      config: InputBlastConfig
  OutputSiteListing:
    type: object
    additionalProperties: false
    properties:
      "^[A-Za-z0-9_- ]+$":
        type: array
        items: OutputListOrganism
  OutputListOrganism:
    type: object
    additionalProperties: false
    properties:
      name: string
      blast:
        type: array
        items: string
        minItems: 1
        uniqueItems: true
  InputBlastCompBasedStats:
    description: |
      | Value                                     | Description                    |
      |-------------------------------------------|--------------------------------|
      | none                                      | no composition-based statistics |
      | comp-based-stats                          | Composition-based statistics as in NAR 29:2994-3005, 2001 |
      | conditional-comp-based-score-adjustment   | Composition-based score adjustment as in Bioinformatics 21:902-911, 2005, conditioned on sequence properties |
      | unconditional-comp-based-score-adjustment | Composition-based score adjustment as in Bioinformatics 21:902-911, 2005, unconditionally |
    type: string
    enum:
      - none
      - comp-based-stats
      - conditional-comp-based-score-adjustment
      - unconditional-comp-based-score-adjustment
  InputBlastScoringMatrix:
    type: string
    enum:
      - BLOSUM45
      - BLOSUM50
      - BLOSUM62
      - BLOSUM80
      - BLOSUM90
      - PAM250
      - PAM30
      - PAM70
  InputBlastSegMask:
    type: object
    additionalProperties: false
    properties:
      enabled?:
        type: boolean
        default: false
      window?:
        description: SEG window
        type: integer
        format: int32
        minimum: 1
        default: 12
      locut?:
        description: SEG locut
        type: number
        format: double
        minimum: 0
        default: 2.2
      hicut?:
        description: SEG hicut
        type: number
        format: double
        minimum: 0
        default: 2.5
  InputBlastStrand:
    type: string
    enum:
      - plus
      - minus
      - both
  JobID:
    description: Base62 encoded UUID
    type: string
    minLength: 11
    maxLength: 22
    pattern: "^[A-Za-z0-9]{11,22}$"
  JobStatus:
    type: string
    enum:
      - queued
      - in-progress
      - completed
      - errored

