#%RAML 1.0 Extension

extends: https://raw.githubusercontent.com/VEuPathDB/docs-api-schema/v2.0.2/libraries/base-service.raml

title: Multi-Blast Service
version: 1.0.0
mediaType: application/json

uses:
  error: https://raw.githubusercontent.com/VEuPathDB/docs-api-schema/v2.0.2/libraries/errors.raml

securitySchemes:
  header-auth:
    description: Authentication based on a WDK auth cookie.
    type:
      x-custom
    describedBy:
      headers:
        Auth_Key:
          description: Authorization header.
          type: string


/jobs:
  displayName: Job Management
  get:
    displayName: List Jobs
    description: |
      List current or past jobs and their statuses for the currently logged in
      user.
    responses:
      200:
        body: GetJobResponse[]
      401:
        body: error.UnauthorizedError
      500:
        body: error.ServerError
  post:
    displayName: Create Job
    body:
      application/json:
        type: NewJobPostRequestJSON
      multipart/form-data:
        type: NewJobPostRequestMultipart
    responses:
      200:
        body: NewJobPostResponse
      400:
        body: error.BadRequestError
      401:
        body: error.UnauthorizedError
      422:
        body: error.UnprocessableEntityError
      500:
        body: error.ServerError


  /{job-id}:
    displayName: Job Lookup
    uriParameters:
      job-id: integer
    get:
      displayName: Get Job Info
      responses:
        200:
          body: GetJobResponse
        401:
          body: error.UnauthorizedError
        404:
          body: error.NotFoundError
        500:
          body: error.ServerError

    /query:
      get:
        displayName: View Job Query
        queryParameters:
          download: boolean
        responses:
          200:
            headers:
              Content-Disposition?:
                type: string
                pattern: 'attachment; filename="([^"]+)"'
            body:
              text/plain: any
          401:
            body: error.UnauthorizedError
          404:
            body: error.NotFoundError
          500:
            body: error.ServerError

    /report:
      displayName: Job Report
      get:
        displayName: Get Job Report
        queryParameters:
          format?:
            type: InputBlastFormat
          fields?:
            type: array
            items: InputBlastFmtField
            uniqueItems: true
            minItems: 1
        responses:
          200:
            headers:
              Content-Disposition:
                type: string
                pattern: 'attachment; filename="([^"]+)"'
            body:
              text/plain: any
              application/json:
                displayName: JSON report output
                description: |
                  Used for the following report types:

                  - `seqalign-json`
                  - `multi-file-json`
                  - `single-file-json`
                type: any
              application/xml:
                displayName: XML report output
                description: |
                  Used for the following report types:

                  - `xml`
                  - `multi-file-xml2`
                  - `single-file-xml2`
                type: any
              application/octet-stream:
                displayName: Binary report output
                type: any
          401:
            body: error.UnauthorizedError
          404:
            body: error.NotFoundError
          500:
            body: error.ServerError

/meta:
  displayName: Service Information
  get:
    displayName: Get Service Meta
    queryParameters:
      site:
        description: |
          Filter the returned targets by the given site name.

          This query param is case insensitive.
        type: string
        examples:
          "1": PlasmoDB
          "2": toxodb
    responses:
      200:
        body: MetaResponse
      401:
        body: error.UnauthorizedError
      500:
        body: error.ServerError


## BEGIN HACK ##################################################################

################################################################################
#                                                                              #
#  DO NOT EDIT THIS FILE; IT WAS GENERATED AUTOMATICALLY.                      #
#  CHANGES MADE HERE WILL BE LOST.                                             #
#                                                                              #
################################################################################

types:
  IOJobStatus:
    type: string
    enum:
      - queued
      - in-progress
      - completed
      - errored
  InputBlastCompBasedStats:
    description: |
      | Value                                     | Description                    |
      |-------------------------------------------|--------------------------------|
      | none                                      | no composition-based statistics |
      | comp-based-stats                          | Composition-based statistics as in NAR 29:2994-3005, 2001 |
      | conditional-comp-based-score-adjustment   | Composition-based score adjustment as in Bioinformatics 21:902-911, 2005, conditioned on sequence properties |
      | unconditional-comp-based-score-adjustment | Composition-based score adjustment as in Bioinformatics 21:902-911, 2005, unconditionally |
    type: string
    enum:
      - none
      - comp-based-stats
      - conditional-comp-based-score-adjustment
      - unconditional-comp-based-score-adjustment
  InputBlastScoringMatrix:
    type: string
    enum:
      - BLOSUM45
      - BLOSUM50
      - BLOSUM62
      - BLOSUM80
      - BLOSUM90
      - PAM250
      - PAM30
      - PAM70
  InputBlastSegMask:
    type: object
    additionalProperties: false
    properties:
      enabled?:
        description: |
          Enable Seg Mask

          Default: `false`
        type: boolean
      window?:
        description: |
          SEG window

          Default: `12`
        type: integer
        format: int32
        minimum: 1
      locut?:
        description: |
          SEG locut

          Default: `2.2`
        type: number
        format: double
        minimum: 0.0
      hicut?:
        description: |
          SEG hicut

          Default: `2.5`
        type: number
        format: double
        minimum: 0.0
  InputBlastStrand:
    type: string
    enum:
      - plus
      - minus
      - both
  InputHitSorting:
    type: string
    enum:
      - by-eval
      - by-bit-score
      - by-total-score
      - by-percent-identity
      - by-query-coverage
  InputHSPSorting:
    type: string
    enum:
      - by-hsp-evalue
      - by-hsp-score
      - by-hsp-query-start
      - by-hsp-percent-identity
      - by-hsp-subject-start
  InputTBlastnConfig:
    type: InputBlastConfig
    discriminatorValue: tblastn
    additionalProperties: false
    properties:
      # General search options
      task?:
        displayName: -task=<string>
        description: |
          Default value: `tblastn`
        type: InputTBlastnTask
      wordSize?:
        displayName: -word_size=<integer, >=2>
        type: integer
        minimum: 2
        description: |
          Word size for wordfinder algorithm

          Default value by task:

          | Task           | Value |
          |----------------|-------|
          | `tblastn`      | 3     |
          | `tblastn-fast` | 6     |

          Applies to task(s): all
      gapOpen?:
        displayName: -gapopen=<integer>
        description: |
          Cost to open a gap.

          Default: `11`

          Applies to task(s): all
        type: integer
        format: int8
        minimum: 1
      gapExtend?:
        description: |
          Cost to extend a gap.

          Default: `1`

          Applies to task(s): all
        type: integer
        format: int8
        minimum: 1
      dbGencode?:
        displayName: -db_gencode=<integer, 1..6, 9..16, 21..31, 33>
        type: integer
        format: int8
        description: |
          Genetic code to use to translate database/subjects (see user manual for
          details)

          Value must be equal to `33` or be in one of the following inclusive
          ranges:

          * [1..6]
          * [9..16]
          * [21..31]

          Default Value: `1`

          Applies to task(s): all
      maxIntronLength?:
        displayName: -max_intron_length=<integer, >=0>
        description: |
          Length of the largest intron allowed in a translated nucleotide sequence
          when linking multiple distinct alignments (a negative value disables
          linking).

          Default: 0

          Applies to task(s): all
        type: integer
        minimum: 0
      matrix?:
        description: |
          Scoring matrix name.

          Applies to task(s): all

          Default value: `BLOSUM62`
        type: InputTBlastnScoringMatrix
      threshold?:
        displayName: -threshold=<real, >=0>
        type: number
        format: double
        minimum: 0.0
        description: |
          Minimum score to add a word to the BLAST lookup table.

          Default value by task:

          | Task           | Value |
          |----------------|-------|
          | `tblastn`      | 13    |
          | `tblastn-fast` | 21    |

          Applies to task(s): all
      compBasedStats?:
        displayName: -comp_based_stats=<string>
        description: |
          Use composition-based statistics.

          Applies to task(s): all

          Default value: `conditional-comp-based-score-adjustment`
        type: InputBlastCompBasedStats
      # BLAST-2-Sequences options

      # subject?:
      #   type: file
      #   description: |
      #     Subject sequence(s) to search

      #     Incompatible with:

      #     * db
      #     * giList
      #     * seqIdList
      #     * negativeGiList
      #     * negativeSeqIdList
      #     * taxIds
      #     * taxIdList
      #     * negativeTaxIds
      #     * negativeTaxIdList
      #     * dbSoftMask
      #     * dbHardMask
      subjectLoc?:
        displayName: -subject_loc=<string, range>
        type: InputBlastLocation
        description: |
          Location on the subject sequence in 1-based offsets

          Incompatible with:

          * db
          * giList
          * seqIdList
          * negativeGiList
          * negativeSeqIdList
          * taxIds
          * taxIdList
          * negativeTaxIds
          * negativeTaxIdList
          * dbSoftMask
          * dbHardMask
          * remote
      # Query filtering options
      seg?:
        displayName: -seg=<string>
        description: |
          Filter query sequence with SEG.

          Applies to task(s): all
        type: InputBlastSegMask
      softMasking?:
        displayName: -soft_masking=<boolean>
        type: boolean
        description: |
          Apply filtering locations as soft masks (i.e., only for finding initial
          matches).

          Default = `false`
      # Restrict search or results

      # giList?:
      #   displayName: -gilist=<string, filename>
      #   type: file
      #   description: |
      #     Restrict search of database to list of GIs

      #     Incompatible with:

      #     * seqIdList
      #     * taxIds
      #     * taxIdList
      #     * negativeGiList
      #     * negativeSeqIdList
      #     * negativeTaxIds
      #     * negativeTaxIdList
      #     * remote
      #     * subject
      #     * subjectLoc

      # seqIdList?:
      #   displayName: -seqidlist=<string, filename>
      #   type: file
      #   description: |
      #     Restrict search of database to list of SeqIDs

      #     Incompatible with:

      #     * giList
      #     * taxIds
      #     * taxIdList
      #     * negativeGiList
      #     * negativeSeqIdList
      #     * negativeTaxIds
      #     * negativeTaxIdList
      #     * remote
      #     * subject
      #     * subjectLoc

      # negativeGiList?:
      #   displayName: negative_gilist=<string, filename>
      #   type: file
      #   description: |
      #     Restrict search of database to everything except the specified GIs

      #     Incompatible with:

      #     * giList
      #     * seqIdList
      #     * taxIds
      #     * taxIdList
      #     * negativeSeqIdList
      #     * negativeTaxIds
      #     * negativeTaxIdList
      #     * remote
      #     * subject
      #     * subjectLoc

      # negativeSeqIdList?:
      #   displayName: negative_seqidlist=<string, filename>
      #   type: file
      #   description: |
      #     Restrict search of database to everything except the specified SeqIDs

      #     Incompatible with:

      #     * giList
      #     * seqIdList
      #     * taxIds
      #     * taxIdList
      #     * negativeGiList
      #     * negativeTaxIds
      #     * negativeTaxIdList
      #     * remote
      #     * subject
      #     * subjectLoc
      taxIds?:
        displayName: -taxids=<string>
        type: string[]
        description: |
          Restrict search of database to include only the specified taxonomy IDs

          Incompatible with:

          * giList
          * seqIdList
          * taxIdList
          * negativeGiList
          * negativeSeqIdList
          * negativeTaxIds
          * negativeTaxIdList
          * remote
          * subject
          * subjectLoc
      negativeTaxIds?:
        displayName: -negative_taxids=<string>
        type: string[]
        description: |
          Restrict search of database to everything except the specified taxonomy IDs

          Incompatible with:

          * giList
          * seqIdList
          * taxIds
          * taxIdList
          * negativeGiList
          * negativeSeqIdList
          * negativeTaxIdList
          * remote
          * subject
          * subjectLoc
      # taxIdList?:
      #   displayName: taxidlist=<string, filename>
      #   type: file
      #   description: |
      #     Restrict search of database to include only the specified taxonomy IDs

      #     Incompatible with:

      #     * giList
      #     * seqIdList
      #     * taxIds
      #     * negativeGiList
      #     * negativeSeqIdList
      #     * negativeTaxIds
      #     * negativeTaxIdList
      #     * remote
      #     * subject
      #     * subjectLoc

      # negativeTaxIdList?:
      #   displayName: negative_taxidlist=<string, filename>
      #   type: file
      #   description: |
      #     Restrict search of database to everything except the specified taxonomy IDs

      #     Incompatible with:

      #     * giList
      #     * seqIdList
      #     * taxIds
      #     * taxIdList
      #     * negativeGiList
      #     * negativeSeqIdList
      #     * negativeTaxIds
      #     * remote
      #     * subject
      #     * subjectLoc

      # entrezQuery?:
      #   displayName: -entrez_query=<string>
      #   type: string
      #   description: |

      #     Restrict search with the given Entrez query

      #     Requires: remote
      dbSoftMask?:
        displayName: -db_soft_mask=<string>
        type: string
        description: |
          Filtering algorithm ID to apply to the BLAST database as soft mask (i.e.,
          only for finding initial matches).

          Applies to task(s): all

          Incompatible with:

          * dbHardMask
          * subject
          * subjectLoc
      dbHardMask?:
        displayName: -db_hard_mask=<string>
        type: string
        description: |
          Filtering algorithm ID to apply to the BLAST database as hard mask (i.e.,
          sequence is masked for all phases of search).

          Applies to task(s): all

          Incompatible with:

          * dbSoftMask
          * subject
          * subjectLoc
      cullingLimit?:
        displayName: -culling_limit=<integer, >=0>
        type: integer
        minimum: 0
        description: |
          If the query range of a hit is enveloped by that of at least this many
          higher-scoring hits, delete the hit

          Incompatible with:

          * bestHitOverhang
          * bestHitScoreEdge
      bestHitOverhang?:
        displayName: -best_hit_overhang=<real, (>0 and <0.5)>
        type: number
        format: double
        minimum: 0.0
        maximum: 0.5
        description: |
          Best Hit algorithm overhang value (recommended value: 0.1)

          Incompatible with: `cullingLimit`
      bestHitScoreEdge?:
        displayName: -best_hit_score_edge=<real, (>0 and <0.5)>
        type: number
        format: double
        minimum: 0.0
        maximum: 0.5
        description: |
          Best Hit algorithm score edge value (recommended value: 0.1)

          Incompatible with: `cullingLimit`
      subjectBesthit?:
        displayName: -subject_besthit
        type: boolean
        description: "Turn on best hit per subject sequence"
      # Statistical options
      sumStats?:
        displayName: -sum_stats=<boolean>
        type: boolean
        description: "Use sum statistics"
      # Extension options
      xDropGap?:
        displayName: -xdrop_gap=<real>
        type: number
        format: double
        description: |
          X-dropoff value (in bits) for preliminary gapped extensions

          Default: `30.0`
      xDropGapFinal?:
        displayName: -xdrop_gap_final=<real>
        type: number
        format: double
        description: |
          X-dropoff value (in bits) for final gapped alignment

          Dfault: `100.0`
      ungapped?:
        displayName: -ungapped
        type: boolean
        description: |
          Perform ungapped alignment only.

          Applies to task(s): all
      windowSize?:
        displayName: -window_size=<integer, >=0>
        type: integer
        minimum: 0
        description: |
          Multiple hits window size, use 0 to specify 1-hit algorithm.

          Default value: `40`

          Applies to task(s): all
      # Miscellaneous options
      useSWTraceback?:
        displayName: -use_sw_tback
        type: boolean
        description: |
          Compute locally optimal Smith-Waterman alignments?
      # PSI-TBLASTN options
      in_pssm?:
        displayName: -in_pssm=<string, filename>
        type: string
        description: |
          PSI-TBLASTN checkpoint file

          Incompatible with:

          * remote
          * query
          * query_loc
  InputTBlastnTask:
    description: |
      | Task           | Use Case                                                 |
      |----------------|----------------------------------------------------------|
      | `tblastn`      | for a standard protein-translated nucleotide comparison  |
      | `tblastn-fast` | for a faster version with a larger word-size based on https://www.ncbi.nlm.nih.gov/pubmed/17921491 |
    type: string
    enum:
      - tblastn
      - tblastn-fast
  InputTBlastnScoringMatrix:
    type: string
    enum:
      - BLOSUM45
      - BLOSUM50
      - BLOSUM62
      - BLOSUM80
      - BLOSUM90
      - PAM30
      - PAM70
      - PAM250
      - IDENTITY
  InputBlastnConfig:
    type: InputBlastConfig
    additionalProperties: false
    discriminator: tool
    properties:
      # Input query options
      strand?:
        displayName: -strand=<string, `both|minus|plus`>
        description: |
          Query strand(s) to search against database/subject. Choice of both, minus,
          or plus.

          Applies to task(s): all

          Default value: `both`
        type: InputBlastStrand
      # General search options
      task?:
        displayName: -task=<string>
        description: |
          Default value: `blastn`
        type: InputBlastnTask
      wordSize?:
        displayName: -word_size=<integer, >=4>
        type: integer
        minimum: 4
        description: |
          Word size for wordfinder algorithm (length of best perfect match).

          Default value by task:

          | Task           | Value | Notes                          |
          |----------------|-------|--------------------------------|
          | `megablast`    | 28    | Length of initial exact match. |
          | `dc-megablast` | 11    | Number of matching nucleotides in initial match. dc-megablast allows non-consecutive letters to match. |
          | `blastn`       | 11    | Length of initial exact match. |
          | `blastn-short` | 7     | Length of initial exact match. |

          Applies to task(s): all
      gapOpen?:
        displayName: -gapopen=<integer>
        type: integer
        description: |
          Cost to open a gap. See appendix “BLASTN reward/penalty values” in the
          NCBI blast docs.

          Default value by task:

          | Task           | Value |
          |----------------|-------|
          | `megablast`    | 0     |
          | `dc-megablast` | 5     |
          | `blastn`       | 5     |
          | `blastn-short` | 5     |

          Applies to task(s): all
      gapExtend?:
        displayName: -gapextend=<integer>
        type: integer
        description: |
          Cost to extend a gap. This default is a function of reward/penalty value.
          See appendix “BLASTN reward/penalty values” in the NCBI blast docs.

          Default value by task:

          | Task           | Value | Notes                                               |
          |----------------|-------|-----------------------------------------------------|
          | `megablast`    | *     | This default is a function of reward/penalty value. |
          | `dc-megablast` | 2     |                                                     |
          | `blastn`       | 2     |                                                     |
          | `blastn-short` | 2     |                                                     |

          Applies to task(s): all
      penalty?:
        displayName: -penalty=<integer, <=0>
        type: integer
        maximum: 0
        description: |
          Penalty for a nucleotide mismatch.

          Default value by task:

          | Task           | Value |
          |----------------|-------|
          | `megablast`    | -2    |
          | `dc-megablast` | -3    |
          | `blastn`       | -3    |
          | `blastn-short` | -3    |

          Applies to task(s): all
      reward?:
        displayName: -reward=<integer, >=0>
        type: integer
        minimum: 0
        description: |
          Reward for a nucleotide match.

          Default value by task:

          | Task           | Value |
          |----------------|-------|
          | `megablast`    | 1     |
          | `dc-megablast` | 2     |
          | `blastn`       | 2     |
          | `blastn-short` | 1     |

          Applies to task(s): all
      useIndex?:
        displayName: -use_index=<boolean>
        type: boolean
        description: |
          Use MegaBLAST database index

          Default = `false`
      indexName?:
        displayName: -index_name=<string>
        type: string
        description: |
          MegaBLAST database index name (deprecated; use only for old style indices)
      # BLAST-2-Sequences options

      # subject?:
      #   type: file
      #   description: |
      #     Subject sequence(s) to search

      #     Incompatible with:

      #     * db
      #     * giList
      #     * seqIdList
      #     * negativeGiList
      #     * negativeSeqIdList
      #     * taxIds
      #     * taxIdList
      #     * negativeTaxIds
      #     * negativeTaxIdList
      #     * dbSoftMask
      #     * dbHardMask
      subjectLoc?:
        displayName: -subject_loc=<string, range>
        type: InputBlastLocation
        description: |
          Location on the subject sequence in 1-based offsets

          Incompatible with:

          * db
          * giList
          * seqIdList
          * negativeGiList
          * negativeSeqIdList
          * taxIds
          * taxIdList
          * negativeTaxIds
          * negativeTaxIdList
          * dbSoftMask
          * dbHardMask
          * remote
      # Query filtering options
      dust?:
        displayName: -dust=<string, dust>
        description: |
          Filter query sequence with dust.

          Applies to task(s): all
        type: InputBlastnDust
      # filteringDb?:
      #   displayName: -filtering_db=<string, dir_name>
      #   type: string
      #     Mask query using the sequences in this database.

      #     Applies to task(s): all
      windowMaskerTaxid?:
        displayName: -window_masker_taxid=<integer>
        type: integer
        description: |
          Enable WindowMasker filtering using a Taxonomic ID.

          Applies to task(s): all
      # windowMaskerDb?:
      #   displayName: -window_masker_db=<string, filename>
      #   type: file
      #   description: |
      #     Enable WindowMasker filtering using this repeats database.

      #     Applies to task(s): all
      softMasking?:
        displayName: -soft_masking=<boolean>
        type: boolean
        description: |
          Apply filtering locations as soft masks (i.e., only for finding initial
          matches).

          Applies to task(s): all

          Default = `true`
      # Restrict search or results

      # giList?:
      #   displayName: -gilist=<string, filename>
      #   type: file
      #   description: |
      #     Restrict search of database to list of GIs

      #     Incompatible with:

      #     * seqIdList
      #     * taxIds
      #     * taxIdList
      #     * negativeGiList
      #     * negativeSeqIdList
      #     * negativeTaxIds
      #     * negativeTaxIdList
      #     * remote
      #     * subject
      #     * subjectLoc

      # seqIdList?:
      #   displayName: -seqidlist=<string, filename>
      #   type: file
      #   description: |
      #     Restrict search of database to list of SeqIDs

      #     Incompatible with:

      #     * giList
      #     * taxIds
      #     * taxIdList
      #     * negativeGiList
      #     * negativeSeqIdList
      #     * negativeTaxIds
      #     * negativeTaxIdList
      #     * remote
      #     * subject
      #     * subjectLoc

      # negativeGiList?:
      #   displayName: negative_gilist=<string, filename>
      #   type: file
      #   description: |
      #     Restrict search of database to everything except the specified GIs

      #     Incompatible with:

      #     * giList
      #     * seqIdList
      #     * taxIds
      #     * taxIdList
      #     * negativeSeqIdList
      #     * negativeTaxIds
      #     * negativeTaxIdList
      #     * remote
      #     * subject
      #     * subjectLoc

      # negativeSeqIdList?:
      #   displayName: negative_seqidlist=<string, filename>
      #   type: file
      #   description: |
      #     Restrict search of database to everything except the specified SeqIDs

      #     Incompatible with:

      #     * giList
      #     * seqIdList
      #     * taxIds
      #     * taxIdList
      #     * negativeGiList
      #     * negativeTaxIds
      #     * negativeTaxIdList
      #     * remote
      #     * subject
      #     * subjectLoc
      taxIds?:
        displayName: -taxids=<string>
        type: string[]
        description: |
          Restrict search of database to include only the specified taxonomy IDs

          Incompatible with:

          * giList
          * seqIdList
          * taxIdList
          * negativeGiList
          * negativeSeqIdList
          * negativeTaxIds
          * negativeTaxIdList
          * remote
          * subject
          * subjectLoc
      negativeTaxIds?:
        displayName: -negative_taxids=<string>
        type: string[]
        description: |
          Restrict search of database to everything except the specified taxonomy IDs

          Incompatible with:

          * giList
          * seqIdList
          * taxIds
          * taxIdList
          * negativeGiList
          * negativeSeqIdList
          * negativeTaxIdList
          * remote
          * subject
          * subjectLoc
      # taxIdList?:
      #   displayName: taxidlist=<string, filename>
      #   type: file
      #   description: |
      #     Restrict search of database to include only the specified taxonomy IDs

      #     Incompatible with:

      #     * giList
      #     * seqIdList
      #     * taxIds
      #     * negativeGiList
      #     * negativeSeqIdList
      #     * negativeTaxIds
      #     * negativeTaxIdList
      #     * remote
      #     * subject
      #     * subjectLoc

      # negativeTaxIdList?:
      #   displayName: negative_taxidlist=<string, filename>
      #   type: file
      #   description: |
      #     Restrict search of database to everything except the specified taxonomy IDs

      #     Incompatible with:

      #     * giList
      #     * seqIdList
      #     * taxIds
      #     * taxIdList
      #     * negativeGiList
      #     * negativeSeqIdList
      #     * negativeTaxIds
      #     * remote
      #     * subject
      #     * subjectLoc

      # entrezQuery?:
      #   displayName: -entrez_query=<string>
      #   type: string
      #   description: |

      #     Restrict search with the given Entrez query

      #     Requires: remote
      dbSoftMask?:
        displayName: -db_soft_mask=<string>
        type: string
        description: |
          Filtering algorithm ID to apply to the BLAST database as soft mask (i.e.,
          only for finding initial matches).

          Applies to task(s): all

          Incompatible with:

          * dbHardMask
          * subject
          * subjectLoc
      dbHardMask?:
        displayName: -db_hard_mask=<string>
        type: string
        description: |
          Filtering algorithm ID to apply to the BLAST database as hard mask (i.e.,
          sequence is masked for all phases of search).

          Applies to task(s): all

          Incompatible with:

          * dbSoftMask
          * subject
          * subjectLoc
      percIdentity?:
        displayName: "-perc_identity=<real, 0..100>"
        type: number
        format: double
        minimum: 0.0
        maximum: 100.0
        description: |
          Percent identity cutoff.

          Applies to task(s): all
      cullingLimit?:
        displayName: -culling_limit=<integer, >=0>
        type: integer
        minimum: 0
        description: |
          If the query range of a hit is enveloped by that of at least this many
          higher-scoring hits, delete the hit

          Incompatible with:

          * bestHitOverhang
          * bestHitScoreEdge
      bestHitOverhang?:
        displayName: -best_hit_overhang=<real, (>0 and <0.5)>
        type: number
        format: double
        minimum: 0.0
        maximum: 0.5
        description: |
          Best Hit algorithm overhang value (recommended value: 0.1)

          Incompatible with: `cullingLimit`
      bestHitScoreEdge?:
        displayName: -best_hit_score_edge=<real, (>0 and <0.5)>
        type: number
        format: double
        minimum: 0.0
        maximum: 0.5
        description: |
          Best Hit algorithm score edge value (recommended value: 0.1)

          Incompatible with: `cullingLimit`
      subjectBesthit?:
        displayName: -subject_besthit
        type: boolean
        description: "Turn on best hit per subject sequence"
      # Discontiguous MegaBLAST options
      templateType?:
        displayName: -template_type=<string, `coding|codingAndOptimal|optimal`>
        type: InputBlastnDcTemplateType
        description: |
          Discontiguous MegaBLAST template type.

          Applies to task(s): dc-megablast

          Default value: `coding`

          Requires: `templateLength`
      templateLength?:
        displayName: -template_length=<integer, `16|18|21` >
        type: integer
        format: int8
        minimum: 16
        maximum: 21
        description: |
          Discontiguous MegaBLAST template length.

          Value must be one of `16`, `18`, or `21`

          Applies to task(s): dc-megablast

          Requires: `templateType`

          Default: `18`
      # Statistical options
      sumStats?:
        displayName: -sum_stats=<boolean>
        type: boolean
        description: "Use sum statistics"
      # Extension options
      xDropGap?:
        displayName: -xdrop_gap=<real>
        type: number
        format: double
        description: |
          X-dropoff value (in bits) for preliminary gapped extensions

          Default: `30.0`
      xDropGapFinal?:
        displayName: -xdrop_gap_final=<real>
        type: number
        format: double
        description: |
          X-dropoff value (in bits) for final gapped alignment

          Dfault: `100.0`
      noGreedy?:
        displayName: -no_greedy
        type: boolean
        description: |
          Use non-greedy dynamic programming extension.

          Applies to task(s): megablast
      minRawGappedScore?:
        displayName: -min_raw_gapped_score=<integer>
        type: integer
        description: |
          Minimum raw gapped score to keep an alignment in the preliminary gapped
          and trace-back stages. Normally set based upon expect value.

          Applies to task(s): all
      ungapped?:
        displayName: -ungapped
        type: boolean
        description: |
          Perform ungapped alignment only.

          Applies to task(s): all
      windowSize?:
        displayName: -window_size=<integer, >=0>
        type: integer
        minimum: 0
        description: |
          Multiple hits window size, use 0 to specify 1-hit algorithm

          Applies to task(s): dc-megablast

          Default: `40`
      offDiagonalRange?:
        displayName: -off_diagonal_range=<integer, >=0>
        type: integer
        minimum: 0
        description: |
          Number of off-diagonals to search for the 2nd hit, use 0 to turn off

          Default = `0`
  InputBlastnDust:
    type: object
    additionalProperties: false
    properties:
      enable?:
        type: boolean
      level?:
        description: |
          DUST level (score threshold for subwindows).

          Default: `20`
        type: integer
        format: int16
      window?:
        description: |
          DUST window length.

          Default: `64`
        type: integer
        format: int16
      linker?:
        description: |
          DUST linker (how close masked intervals should be to get merged together).

          Default: `1`
        type: integer
        format: int16
  InputBlastnTask:
    description: |
      | Task           | Use Case                                                   |
      |----------------|------------------------------------------------------------|
      | `megablast`    | for very similar sequences (e.g, sequencing errors)        |
      | `dc-megablast` | typically used for inter-species comparisons               |
      | `blastn`       | the traditional program used for inter-species comparisons |
      | `blastn-short` | optimized for sequences less than 30 nucleotides           |
    type: string
    enum:
      - megablast
      - dc-megablast
      - blastn
      - blastn-short
  InputBlastnDcTemplateType:
    type: string
    enum:
      - coding
      - optimal
      - both
  NewJobPostRequestJSON:
    type: object
    additionalProperties: false
    properties:
      site:
        type: string
      organism:
      target-type:
        description: |
          Target file name.  Maps to the `--db` flag for the blast tools.
        type: string
      config:
        description: |
          Blast tool configuration.

          Must be one of the following implementation types:

          - [InputBlastnConfig](#type:InputBlastnConfig)
          - [InputBlastpConfig](#type:InputBlastpConfig)
          - [InputBlastxConfig](#type:InputBlastxConfig)
          - [InputTBlastnConfig](#type:InputTBlastnConfig)
          - [InputTBlastxConfig](#type:InputTBlastxConfig)
        type: InputBlastConfig
      description?:
        description: |
          User provided description of the job.
        type: string
  NewJobPostRequestMultipart:
    type: object
    additionalProperties: false
    properties:
      query?: file
      # subject?: file
      properties: NewJobPostRequestJSON
  NewJobPostResponse:
    type: object
    additionalProperties: false
    properties:
      jobId:
        type: integer
        format: int32
        minimum: 1
  MetaResponse:
    type: object
    additionalProperties: false
    properties:
      targets: OutputSiteListing
  GetJobResponse:
    description: |
      Details about a specific job, it's configuration, and it's current status.
    type: object
    additionalProperties: false
    properties:
      id:
        type: integer
        format: int32
        minimum: 1
      status: IOJobStatus
      config: InputBlastConfig
  OutputSiteListing:
    type: object
    additionalProperties: false
    properties:
      "^[A-Za-z0-9_- ]+$":
        type: array
        items: OutputListOrganism
  OutputListOrganism:
    type: object
    additionalProperties: false
    properties:
      name: string
      blast:
        type: array
        items: string
        minItems: 1
        uniqueItems: true
  InputBlastpConfig:
    type: InputBlastConfig
    discriminatorValue: blastp
    additionalProperties: false
    properties:
      # General search options
      task?:
        displayName: -task=<string>
        type: InputBlastpTask
        description: |
          Task to execute

          Default = `blastp'
      wordSize?:
        displayName: -word_size=<integer, >=2>
        type: integer
        minimum: 2
        description: |
          Word size of initial match.

          Default value by task:

          | Task           | Value |
          |----------------|-------|
          | `blastp`       | 3     |
          | `blastp-short` | 2     |
          | `blastp-fast`  | 6     |

          Applies to task(s): all
      gapOpen?:
        displayName: -gapopen=<integer>
        type: integer
        description: |
          Cost to open a gap.

          Default value by task:

          | Task           | Value |
          |----------------|-------|
          | `blastp`       | 11    |
          | `blastp-short` | 9     |

          Applies to task(s): `blastp`, `blastp-short`
      gapExtend?:
        displayName: -gapextend=<integer>
        type: integer
        description: |
          Cost to extend a gap.

          Default value by task:

          | Task           | Value |
          |----------------|-------|
          | `blastp`       | 1     |
          | `blastp-short` | 1     |

          Applies to task(s): `blastp`, `blastp-short`
      matrix?:
        displayName: -matrix=<string>
        type: InputBlastpScoringMatrix
        description: |
          Scoring matrix name.

          Default value by task:

          | Task           | Value    |
          |----------------|----------|
          | `blastp`       | BLOSUM62 |
          | `blastp-short` | PAM30    |

          Applies to task(s): `blastp`, `blastp-short`
      threshold?:
        displayName: -threshold=<real, >=0>
        type: number
        format: double
        minimum: 0.0
        description: |
          Minimum score to add a word to the BLAST lookup table.

          Default value by task:

          | Task           | Value |
          |----------------|-------|
          | `blastp`       | 11.0  |
          | `blastp-short` | 16.0  |
          | `blastp-fast`  | 21.0  |

          Applies to task(s): all
      compBasedStats?:
        displayName: -comp_based_stats=<string>
        type: InputBlastCompBasedStats
        description: |
          Use composition-based statistics.

          Default value by task:

          | Task           | Value                                     |
          |----------------|-------------------------------------------|
          | `blastp`       | `conditional-comp-based-score-adjustment` |
          | `blastp-short` | `none`                                    |
          | `blastp-fast`  | `conditional-comp-based-score-adjustment` |

          Applies to task(s): all
      # BLAST-2-Sequences options

      # subject?:
      #   type: file
      #   description: |
      #     Subject sequence(s) to search

      #     Incompatible with:

      #     * db
      #     * giList
      #     * seqIdList
      #     * negativeGiList
      #     * negativeSeqIdList
      #     * taxIds
      #     * taxIdList
      #     * negativeTaxIds
      #     * negativeTaxIdList
      #     * ipgList
      #     * negativeIpgList
      #     * dbSoftMask
      #     * dbHardMask
      subjectLoc?:
        displayName: -subject_loc=<string, range>
        type: InputBlastLocation
        description: |
          Location on the subject sequence in 1-based offsets

          Incompatible with:

          * db
          * giList
          * seqIdList
          * negativeGiList
          * negativeSeqIdList
          * taxIds
          * taxIdList
          * negativeTaxIds
          * negativeTaxIdList
          * ipgList
          * negativeIpgList
          * dbSoftMask
          * dbHardMask
          * remote
      # Query filtering options
      seg?:
        displayName: -seg=<string>
        description: |
          Filter query sequence with SEG.

          Applies to task(s): all
        type: InputBlastSegMask
      softMasking?:
        displayName: -soft_masking=<boolean>
        type: boolean
        description: |
          Apply filtering locations as soft masks (i.e., only for finding initial
          matches).

          Applies to task(s): `blastp`

          Default = `false`
      # Restrict search or results

      # giList?:
      #   displayName: -gilist=<string, filename>
      #   type: file
      #   description: |
      #     Restrict search of database to list of GIs

      #     Incompatible with:

      #     * seqIdList
      #     * taxIds
      #     * taxIdList
      #     * negativeGiList
      #     * negativeSeqIdList
      #     * negativeTaxIds
      #     * negativeTaxIdList
      #     * remote
      #     * subject
      #     * subjectLoc

      # seqIdList?:
      #   displayName: -seqidlist=<string, filename>
      #   type: file
      #   description: |
      #     Restrict search of database to list of SeqIDs

      #     Incompatible with:

      #     * giList
      #     * taxIds
      #     * taxIdList
      #     * negativeGiList
      #     * negativeSeqIdList
      #     * negativeTaxIds
      #     * negativeTaxIdList
      #     * remote
      #     * subject
      #     * subjectLoc

      # negativeGiList?:
      #   displayName: negative_gilist=<string, filename>
      #   type: file
      #   description: |
      #     Restrict search of database to everything except the specified GIs

      #     Incompatible with:

      #     * giList
      #     * seqIdList
      #     * taxIds
      #     * taxIdList
      #     * negativeSeqIdList
      #     * negativeTaxIds
      #     * negativeTaxIdList
      #     * remote
      #     * subject
      #     * subjectLoc

      # negativeSeqIdList?:
      #   displayName: negative_seqidlist=<string, filename>
      #   type: file
      #   description: |
      #     Restrict search of database to everything except the specified SeqIDs

      #     Incompatible with:

      #     * giList
      #     * seqIdList
      #     * taxIds
      #     * taxIdList
      #     * negativeGiList
      #     * negativeTaxIds
      #     * negativeTaxIdList
      #     * remote
      #     * subject
      #     * subjectLoc
      taxIds?:
        displayName: -taxids=<string>
        type: string[]
        description: |
          Restrict search of database to include only the specified taxonomy IDs

          Incompatible with:

          * giList
          * seqIdList
          * taxIdList
          * negativeGiList
          * negativeSeqIdList
          * negativeTaxIds
          * negativeTaxIdList
          * remote
          * subject
          * subjectLoc
      negativeTaxIds?:
        displayName: -negative_taxids=<string>
        type: string[]
        description: |
          Restrict search of database to everything except the specified taxonomy IDs

          Incompatible with:

          * giList
          * seqIdList
          * taxIds
          * taxIdList
          * negativeGiList
          * negativeSeqIdList
          * negativeTaxIdList
          * remote
          * subject
          * subjectLoc
      # taxIdList?:
      #   displayName: taxidlist=<string, filename>
      #   type: file
      #   description: |
      #     Restrict search of database to include only the specified taxonomy IDs

      #     Incompatible with:

      #     * giList
      #     * seqIdList
      #     * taxIds
      #     * negativeGiList
      #     * negativeSeqIdList
      #     * negativeTaxIds
      #     * negativeTaxIdList
      #     * remote
      #     * subject
      #     * subjectLoc

      # negativeTaxIdList?:
      #   displayName: negative_taxidlist=<string, filename>
      #   type: file
      #   description: |
      #     Restrict search of database to everything except the specified taxonomy IDs

      #     Incompatible with:

      #     * giList
      #     * seqIdList
      #     * taxIds
      #     * taxIdList
      #     * negativeGiList
      #     * negativeSeqIdList
      #     * negativeTaxIds
      #     * remote
      #     * subject
      #     * subjectLoc

      #  ipgList?:
      #    displayName: -ipglist=<string, filename>
      #    type: file
      #    description: |
      #      Restrict search of database to list of IPGs
      #
      #      Incompatible with:
      #
      #      * subject
      #      * subject_loc
      #
      #  negativeIpgList?:
      #    displayName: -negative_ipglist=<string, filename>
      #    type: file
      #    description: |
      #      Restrict search of database to everything except the specified IPGs
      #
      #      Incompatible with:
      #
      #      * subject
      #      * subject_loc

      # entrezQuery?:
      #   displayName: -entrez_query=<string>
      #   type: string
      #   description: |

      #     Restrict search with the given Entrez query

      #     Requires: remote
      dbSoftMask?:
        displayName: -db_soft_mask=<string>
        type: string
        description: |
          Filtering algorithm ID to apply to the BLAST database as soft mask (i.e.,
          only for finding initial matches).

          Applies to task(s): all

          Incompatible with:

          * dbHardMask
          * subject
          * subjectLoc
      dbHardMask?:
        displayName: -db_hard_mask=<string>
        type: string
        description: |
          Filtering algorithm ID to apply to the BLAST database as hard mask (i.e.,
          sequence is masked for all phases of search).

          Applies to task(s): all

          Incompatible with:

          * dbSoftMask
          * subject
          * subjectLoc
      cullingLimit?:
        displayName: -culling_limit=<integer, >=0>
        type: integer
        minimum: 0
        description: |
          If the query range of a hit is enveloped by that of at least this many
          higher-scoring hits, delete the hit

          Incompatible with:

          * bestHitOverhang
          * bestHitScoreEdge
      bestHitOverhang?:
        displayName: -best_hit_overhang=<real, (>0 and <0.5)>
        type: number
        format: double
        minimum: 0.0
        maximum: 0.5
        description: |
          Best Hit algorithm overhang value (recommended value: 0.1)

          Incompatible with: `cullingLimit`
      bestHitScoreEdge?:
        displayName: -best_hit_score_edge=<real, (>0 and <0.5)>
        type: number
        format: double
        minimum: 0.0
        maximum: 0.5
        description: |
          Best Hit algorithm score edge value (recommended value: 0.1)

          Incompatible with: `cullingLimit`
      subjectBesthit?:
        displayName: -subject_besthit
        type: boolean
        description: "Turn on best hit per subject sequence"
      # Extension options
      xDropGap?:
        displayName: -xdrop_gap=<real>
        type: number
        format: double
        description: |
          X-dropoff value (in bits) for preliminary gapped extensions

          Default: `30.0`
      xDropGapFinal?:
        displayName: -xdrop_gap_final=<real>
        type: number
        format: double
        description: |
          X-dropoff value (in bits) for final gapped alignment

          Dfault: `100.0`
      windowSize?:
        displayName: -window_size=<integer, >=0>
        type: integer
        minimum: 0
        description: |
          Multiple hits window size, use 0 to specify 1-hit algorithm.

          Default value by task:

          | Task           | Value |
          |----------------|-------|
          | `blastp`       | 40    |
          | `blastp-short` | 15    |
          | `blastp-fast`  | 40    |

          Applies to task(s): all
      ungapped?:
        displayName: -ungapped
        type: boolean
        description: |
          Perform ungapped alignment only.

          Applies to task(s): all
      # Miscellaneous options
      useSWTraceback?:
        displayName: -use_sw_tback
        type: boolean
        description: |
          Compute locally optimal Smith-Waterman alignments?
  InputBlastpTask:
    description: |
      | Task           | Use Case                                                 |
      |----------------|----------------------------------------------------------|
      | `blastp`       |  for standard protein-protein comparisons                |
      | `blastp-short` | optimized for query sequences shorter than 30 residues   |
      | `blastp-fast`  | a faster version that uses a larger word-size per https://www.ncbi.nlm.nih.gov/pubmed/17921491 |
    type: string
    enum:
      - blastp
      - blastp-short
      - blastp-fast
  InputBlastpScoringMatrix:
    type: string
    enum:
      - BLOSUM45
      - BLOSUM50
      - BLOSUM62
      - BLOSUM80
      - BLOSUM90
      - PAM30
      - PAM70
      - PAM250
      - IDENTITY
  InputBlastxConfig:
    type: InputBlastConfig
    discriminatorValue: blastx
    additionalProperties: false
    properties:
      # Input query options
      strand?:
        displayName: -strand=<string, `both|minus|plus`>
        description: |
          Query strand(s) to search against database/subject. Choice of both, minus,
          or plus.

          Applies to task(s): all

          Default value: `both`
        type: InputBlastStrand
      queryGeneticCode:
        displayName: -query_gencode=<integer, 1..6, 9..16, 21..31, 33>
        description: |
          Genetic code to translate query, see
          ftp://ftp.ncbi.nih.gov/entrez/misc/data/gc.prt

          Value must be equal to `33` or be in one of the following inclusive
          ranges:

          * [1..6]
          * [9..16]
          * [21..31]

          Default Value: `1`

          Applies to task(s): all
        type: integer
        format: int8
        minimum: 1
      # General search options
      task?:
        displayName: -task=<string>
        type: InputBlastxTask
        description: |
          Default value: `blastx`
      wordSize?:
        description: |
          Word size for wordfinder algorithm.

          Default value by task:

          | Task          | Value |
          |---------------|-------|
          | `blastx`      | 3     |
          | `blastx-fast` | 6     |

          Applies to task(s): all
        type: integer
        format: int8
        minimum: 2
      gapOpen?:
        displayName: -gapopen=<integer>
        description: |
          Cost to open a gap.

          Default: `11`

          Applies to task(s): all
        type: integer
        format: int8
        minimum: 1
      gapExtend?:
        description: |
          Cost to extend a gap.

          Default: `1`

          Applies to task(s): all
        type: integer
        format: int8
        minimum: 1
      maxIntronLength?:
        displayName: -max_intron_length=<integer, >=0>
        description: |
          Length of the largest intron allowed in a translated nucleotide sequence
          when linking multiple distinct alignments (a negative value disables
          linking).

          Default: 0

          Applies to task(s): all
        type: integer
        minimum: 0
      matrix?:
        description: |
          Scoring matrix name.

          Applies to task(s): all

          Default value: `BLOSUM62`
        type: InputBlastxScoringMatrix
      threshold?:
        displayName: -threshold=<real, >=0>
        type: number
        format: double
        minimum: 0.0
        description: |
          Minimum score to add a word to the BLAST lookup table.

          Default value by task:

          | Task          | Value |
          |---------------|-------|
          | `blastx`      | 12    |
          | `blastx-fast` | 21    |

          Applies to task(s): all
      compBasedStats?:
        displayName: -comp_based_stats=<string>
        description: |
          Use composition-based statistics.

          Applies to task(s): all

          Default value: `conditional-comp-based-score-adjustment`
        type: InputBlastCompBasedStats
      # BLAST-2-Sequences options

      # subject?:
      #   type: file
      #   description: |
      #     Subject sequence(s) to search

      #     Incompatible with:

      #     * db
      #     * giList
      #     * seqIdList
      #     * negativeGiList
      #     * negativeSeqIdList
      #     * taxIds
      #     * taxIdList
      #     * negativeTaxIds
      #     * negativeTaxIdList
      #     * ipgList
      #     * negativeIpgList
      #     * dbSoftMask
      #     * dbHardMask
      subjectLoc?:
        displayName: -subject_loc=<string, range>
        type: InputBlastLocation
        description: |
          Location on the subject sequence in 1-based offsets

          Incompatible with:

          * db
          * giList
          * seqIdList
          * negativeGiList
          * negativeSeqIdList
          * taxIds
          * taxIdList
          * negativeTaxIds
          * negativeTaxIdList
          * ipgList
          * negativeIpgList
          * dbSoftMask
          * dbHardMask
          * remote
      # Query filtering options
      seg?:
        displayName: -seg=<string>
        description: |
          Filter query sequence with SEG.

          Applies to task(s): all
        type: InputBlastSegMask
      softMasking?:
        displayName: -soft_masking=<boolean>
        type: boolean
        description: |
          Apply filtering locations as soft masks (i.e., only for finding initial
          matches).

          Applies to task(s): `blastp`

          Default = `false`
      # Restrict search or results

      # giList?:
      #   displayName: -gilist=<string, filename>
      #   type: file
      #   description: |
      #     Restrict search of database to list of GIs

      #     Incompatible with:

      #     * seqIdList
      #     * taxIds
      #     * taxIdList
      #     * negativeGiList
      #     * negativeSeqIdList
      #     * negativeTaxIds
      #     * negativeTaxIdList
      #     * remote
      #     * subject
      #     * subjectLoc

      # seqIdList?:
      #   displayName: -seqidlist=<string, filename>
      #   type: file
      #   description: |
      #     Restrict search of database to list of SeqIDs

      #     Incompatible with:

      #     * giList
      #     * taxIds
      #     * taxIdList
      #     * negativeGiList
      #     * negativeSeqIdList
      #     * negativeTaxIds
      #     * negativeTaxIdList
      #     * remote
      #     * subject
      #     * subjectLoc

      # negativeGiList?:
      #   displayName: negative_gilist=<string, filename>
      #   type: file
      #   description: |
      #     Restrict search of database to everything except the specified GIs

      #     Incompatible with:

      #     * giList
      #     * seqIdList
      #     * taxIds
      #     * taxIdList
      #     * negativeSeqIdList
      #     * negativeTaxIds
      #     * negativeTaxIdList
      #     * remote
      #     * subject
      #     * subjectLoc

      # negativeSeqIdList?:
      #   displayName: negative_seqidlist=<string, filename>
      #   type: file
      #   description: |
      #     Restrict search of database to everything except the specified SeqIDs

      #     Incompatible with:

      #     * giList
      #     * seqIdList
      #     * taxIds
      #     * taxIdList
      #     * negativeGiList
      #     * negativeTaxIds
      #     * negativeTaxIdList
      #     * remote
      #     * subject
      #     * subjectLoc
      taxIds?:
        displayName: -taxids=<string>
        type: string[]
        description: |
          Restrict search of database to include only the specified taxonomy IDs

          Incompatible with:

          * giList
          * seqIdList
          * taxIdList
          * negativeGiList
          * negativeSeqIdList
          * negativeTaxIds
          * negativeTaxIdList
          * remote
          * subject
          * subjectLoc
      negativeTaxIds?:
        displayName: -negative_taxids=<string>
        type: string[]
        description: |
          Restrict search of database to everything except the specified taxonomy IDs

          Incompatible with:

          * giList
          * seqIdList
          * taxIds
          * taxIdList
          * negativeGiList
          * negativeSeqIdList
          * negativeTaxIdList
          * remote
          * subject
          * subjectLoc
      # taxIdList?:
      #   displayName: taxidlist=<string, filename>
      #   type: file
      #   description: |
      #     Restrict search of database to include only the specified taxonomy IDs

      #     Incompatible with:

      #     * giList
      #     * seqIdList
      #     * taxIds
      #     * negativeGiList
      #     * negativeSeqIdList
      #     * negativeTaxIds
      #     * negativeTaxIdList
      #     * remote
      #     * subject
      #     * subjectLoc

      # negativeTaxIdList?:
      #   displayName: negative_taxidlist=<string, filename>
      #   type: file
      #   description: |
      #     Restrict search of database to everything except the specified taxonomy IDs

      #     Incompatible with:

      #     * giList
      #     * seqIdList
      #     * taxIds
      #     * taxIdList
      #     * negativeGiList
      #     * negativeSeqIdList
      #     * negativeTaxIds
      #     * remote
      #     * subject
      #     * subjectLoc

      #  ipgList?:
      #    displayName: -ipglist=<string, filename>
      #    type: file
      #    description: |
      #      Restrict search of database to list of IPGs
      #
      #      Incompatible with:
      #
      #      * subject
      #      * subject_loc
      #
      #  negativeIpgList?:
      #    displayName: -negative_ipglist=<string, filename>
      #    type: file
      #    description: |
      #      Restrict search of database to everything except the specified IPGs
      #
      #      Incompatible with:
      #
      #      * subject
      #      * subject_loc

      # entrezQuery?:
      #   displayName: -entrez_query=<string>
      #   type: string
      #   description: |

      #     Restrict search with the given Entrez query

      #     Requires: remote
      dbSoftMask?:
        displayName: -db_soft_mask=<string>
        type: string
        description: |
          Filtering algorithm ID to apply to the BLAST database as soft mask (i.e.,
          only for finding initial matches).

          Applies to task(s): all

          Incompatible with:

          * dbHardMask
          * subject
          * subjectLoc
      dbHardMask?:
        displayName: -db_hard_mask=<string>
        type: string
        description: |
          Filtering algorithm ID to apply to the BLAST database as hard mask (i.e.,
          sequence is masked for all phases of search).

          Applies to task(s): all

          Incompatible with:

          * dbSoftMask
          * subject
          * subjectLoc
      cullingLimit?:
        displayName: -culling_limit=<integer, >=0>
        type: integer
        minimum: 0
        description: |
          If the query range of a hit is enveloped by that of at least this many
          higher-scoring hits, delete the hit

          Incompatible with:

          * bestHitOverhang
          * bestHitScoreEdge
      bestHitOverhang?:
        displayName: -best_hit_overhang=<real, (>0 and <0.5)>
        type: number
        format: double
        minimum: 0.0
        maximum: 0.5
        description: |
          Best Hit algorithm overhang value (recommended value: 0.1)

          Incompatible with: `cullingLimit`
      bestHitScoreEdge?:
        displayName: -best_hit_score_edge=<real, (>0 and <0.5)>
        type: number
        format: double
        minimum: 0.0
        maximum: 0.5
        description: |
          Best Hit algorithm score edge value (recommended value: 0.1)

          Incompatible with: `cullingLimit`
      subjectBesthit?:
        displayName: -subject_besthit
        type: boolean
        description: "Turn on best hit per subject sequence"
      # Statistical options
      sumStats?:
        displayName: -sum_stats=<boolean>
        type: boolean
        description: "Use sum statistics"
      # Extension options
      xDropGap?:
        displayName: -xdrop_gap=<real>
        type: number
        format: double
        description: |
          X-dropoff value (in bits) for preliminary gapped extensions

          Default: `30.0`
      xDropGapFinal?:
        displayName: -xdrop_gap_final=<real>
        type: number
        format: double
        description: |
          X-dropoff value (in bits) for final gapped alignment

          Dfault: `100.0`
      windowSize?:
        displayName: -window_size=<integer, >=0>
        type: integer
        minimum: 0
        description: |
          Multiple hits window size, use 0 to specify 1-hit algorithm.

          Default value: `40`

          Applies to task(s): all
      ungapped?:
        displayName: -ungapped
        type: boolean
        description: |
          Perform ungapped alignment only.

          Applies to task(s): all
      # Miscellaneous options
      useSWTraceback?:
        displayName: -use_sw_tback
        type: boolean
        description: |
          Compute locally optimal Smith-Waterman alignments?
  InputBlastxTask:
    description: |
      | Task           | Use Case                                                 |
      |----------------|----------------------------------------------------------|
      | `blastx`       | for standard translated nucleotide-protein comparison    |
      | `blastx-fast`  | a faster version that uses a larger word-size based on https://www.ncbi.nlm.nih.gov/pubmed/17921491 |
    type: string
    enum:
      - blastx
      - blastx-fast
  InputBlastxScoringMatrix:
    type: string
    enum:
      - BLOSUM45
      - BLOSUM50
      - BLOSUM62
      - BLOSUM80
      - BLOSUM90
      - PAM30
      - PAM70
      - PAM250
  InputTBlastxConfig:
    type: InputBlastConfig
    discriminatorValue: tblastx
    additionalProperties: false
    properties:
      # Input query options
      strand?:
        displayName: -strand=<string, `both|minus|plus`>
        description: |
          Query strand(s) to search against database/subject. Choice of both, minus,
          or plus.

          Applies to task(s): all

          Default value: `both`
        type: InputBlastStrand
      queryGeneticCode:
        displayName: -query_gencode=<integer, 1..6, 9..16, 21..31, 33>
        description: |
          Genetic code to translate query, see
          https://www.ncbi.nlm.nih.gov/Taxonomy/taxonomyhome.html/index.cgi?chapter=cgencodes for details

          Value must be equal to `33` or be in one of the following inclusive
          ranges:

          * [1..6]
          * [9..16]
          * [21..31]

          Default Value: `1`

          Applies to task(s): all
        type: integer
        format: int8
        minimum: 1
      # General search options
      wordSize?:
        description: |
          Word size for wordfinder algorithm.

          Applies to task(s): all
        type: integer
        format: int8
        minimum: 2
      maxIntronLength?:
        displayName: -max_intron_length=<integer, >=0>
        description: |
          Length of the largest intron allowed in a translated nucleotide sequence
          when linking multiple distinct alignments (a negative value disables
          linking).

          Default: 0

          Applies to task(s): all
        type: integer
        minimum: 0
      matrix?:
        displayName: -matrix=<string>
        description: |
          Scoring matrix name.

          Default value: `BLOSUM62`
        type: InputTBlastxScoringMatrix
      threshold?:
        displayName: -threshold=<real, >=0>
        type: number
        format: double
        minimum: 0.0
        description: |
          Minimum score to add a word to the BLAST lookup table.

          Default value: `13`
          Applies to task(s): all
      dbGencode?:
        displayName: -db_gencode=<integer, 1..6, 9..16, 21..31, 33>
        type: integer
        format: int8
        minimum: 1
        maximum: 33
        description: |
          Genetic code to use to translate database/subjects (see user manual for
          details)

          Value must be equal to `33` or be in one of the following inclusive
          ranges:

          * [1..6]
          * [9..16]
          * [21..31]

          Default Value: `1`

          Applies to task(s): all
      # BLAST-2-Sequences options

      # subject?:
      #   type: file
      #   description: |
      #     Subject sequence(s) to search

      #     Incompatible with:

      #     * db
      #     * giList
      #     * seqIdList
      #     * negativeGiList
      #     * negativeSeqIdList
      #     * taxIds
      #     * taxIdList
      #     * negativeTaxIds
      #     * negativeTaxIdList
      #     * dbSoftMask
      #     * dbHardMask
      subjectLoc?:
        displayName: -subject_loc=<string, range>
        type: InputBlastLocation
        description: |
          Location on the subject sequence in 1-based offsets

          Incompatible with:

          * db
          * giList
          * seqIdList
          * negativeGiList
          * negativeSeqIdList
          * taxIds
          * taxIdList
          * negativeTaxIds
          * negativeTaxIdList
          * dbSoftMask
          * dbHardMask
          * remote
      # Query filtering options
      seg?:
        displayName: -seg=<string>
        description: |
          Filter query sequence with SEG.

          Default: `"12 2.2 2.5"`

          Applies to task(s): all
        type: InputBlastSegMask
      softMasking?:
        displayName: -soft_masking=<boolean>
        type: boolean
        description: |
          Apply filtering locations as soft masks (i.e., only for finding initial
          matches).

          Default = `false`
      # Restrict search or results

      # giList?:
      #   displayName: -gilist=<string, filename>
      #   type: file
      #   description: |
      #     Restrict search of database to list of GIs

      #     Incompatible with:

      #     * seqIdList
      #     * taxIds
      #     * taxIdList
      #     * negativeGiList
      #     * negativeSeqIdList
      #     * negativeTaxIds
      #     * negativeTaxIdList
      #     * remote
      #     * subject
      #     * subjectLoc

      # seqIdList?:
      #   displayName: -seqidlist=<string, filename>
      #   type: file
      #   description: |
      #     Restrict search of database to list of SeqIDs

      #     Incompatible with:

      #     * giList
      #     * taxIds
      #     * taxIdList
      #     * negativeGiList
      #     * negativeSeqIdList
      #     * negativeTaxIds
      #     * negativeTaxIdList
      #     * remote
      #     * subject
      #     * subjectLoc

      # negativeGiList?:
      #   displayName: negative_gilist=<string, filename>
      #   type: file
      #   description: |
      #     Restrict search of database to everything except the specified GIs

      #     Incompatible with:

      #     * giList
      #     * seqIdList
      #     * taxIds
      #     * taxIdList
      #     * negativeSeqIdList
      #     * negativeTaxIds
      #     * negativeTaxIdList
      #     * remote
      #     * subject
      #     * subjectLoc

      # negativeSeqIdList?:
      #   displayName: negative_seqidlist=<string, filename>
      #   type: file
      #   description: |
      #     Restrict search of database to everything except the specified SeqIDs

      #     Incompatible with:

      #     * giList
      #     * seqIdList
      #     * taxIds
      #     * taxIdList
      #     * negativeGiList
      #     * negativeTaxIds
      #     * negativeTaxIdList
      #     * remote
      #     * subject
      #     * subjectLoc
      taxIds?:
        displayName: -taxids=<string>
        type: string[]
        description: |
          Restrict search of database to include only the specified taxonomy IDs

          Incompatible with:

          * giList
          * seqIdList
          * taxIdList
          * negativeGiList
          * negativeSeqIdList
          * negativeTaxIds
          * negativeTaxIdList
          * remote
          * subject
          * subjectLoc
      negativeTaxIds?:
        displayName: -negative_taxids=<string>
        type: string[]
        description: |
          Restrict search of database to everything except the specified taxonomy IDs

          Incompatible with:

          * giList
          * seqIdList
          * taxIds
          * taxIdList
          * negativeGiList
          * negativeSeqIdList
          * negativeTaxIdList
          * remote
          * subject
          * subjectLoc
      # taxIdList?:
      #   displayName: taxidlist=<string, filename>
      #   type: file
      #   description: |
      #     Restrict search of database to include only the specified taxonomy IDs

      #     Incompatible with:

      #     * giList
      #     * seqIdList
      #     * taxIds
      #     * negativeGiList
      #     * negativeSeqIdList
      #     * negativeTaxIds
      #     * negativeTaxIdList
      #     * remote
      #     * subject
      #     * subjectLoc

      # negativeTaxIdList?:
      #   displayName: negative_taxidlist=<string, filename>
      #   type: file
      #   description: |
      #     Restrict search of database to everything except the specified taxonomy IDs

      #     Incompatible with:

      #     * giList
      #     * seqIdList
      #     * taxIds
      #     * taxIdList
      #     * negativeGiList
      #     * negativeSeqIdList
      #     * negativeTaxIds
      #     * remote
      #     * subject
      #     * subjectLoc

      # entrezQuery?:
      #   displayName: -entrez_query=<string>
      #   type: string
      #   description: |

      #     Restrict search with the given Entrez query

      #     Requires: remote
      dbSoftMask?:
        displayName: -db_soft_mask=<string>
        type: string
        description: |
          Filtering algorithm ID to apply to the BLAST database as soft mask (i.e.,
          only for finding initial matches).

          Applies to task(s): all

          Incompatible with:

          * dbHardMask
          * subject
          * subjectLoc
      dbHardMask?:
        displayName: -db_hard_mask=<string>
        type: string
        description: |
          Filtering algorithm ID to apply to the BLAST database as hard mask (i.e.,
          sequence is masked for all phases of search).

          Applies to task(s): all

          Incompatible with:

          * dbSoftMask
          * subject
          * subjectLoc
      cullingLimit?:
        displayName: -culling_limit=<integer, >=0>
        type: integer
        minimum: 0
        description: |
          If the query range of a hit is enveloped by that of at least this many
          higher-scoring hits, delete the hit

          Incompatible with:

          * bestHitOverhang
          * bestHitScoreEdge
      bestHitOverhang?:
        displayName: -best_hit_overhang=<real, (>0 and <0.5)>
        type: number
        format: double
        minimum: 0.0
        maximum: 0.5
        description: |
          Best Hit algorithm overhang value (recommended value: 0.1)

          Incompatible with: `cullingLimit`
      bestHitScoreEdge?:
        displayName: -best_hit_score_edge=<real, (>0 and <0.5)>
        type: number
        format: double
        minimum: 0.0
        maximum: 0.5
        description: |
          Best Hit algorithm score edge value (recommended value: 0.1)

          Incompatible with: `cullingLimit`
      subjectBesthit?:
        displayName: -subject_besthit
        type: boolean
        description: "Turn on best hit per subject sequence"
      # Statistical options
      sumStats?:
        displayName: -sum_stats=<boolean>
        type: boolean
        description: "Use sum statistics"
      # Extension options
      windowSize?:
        displayName: -window_size=<integer, >=0>
        type: integer
        minimum: 0
        description: |
          Multiple hits window size, use 0 to specify 1-hit algorithm.
  InputTBlastxScoringMatrix:
    type: string
    enum:
      - BLOSUM45
      - BLOSUM50
      - BLOSUM62
      - BLOSUM80
      - BLOSUM90
      - PAM250
      - PAM30
      - PAM70
  InputBlastConfig:
    type: object
    additionalProperties: false
    discriminator: tool
    properties:
      tool: InputBlastTool
      # h?:
      #   displayName: -h
      #   type: boolean
      #   description:
      #     Print USAGE and DESCRIPTION.

      #     Ignore all other parameters

      # help?:
      #   displayName: -help
      #   type: boolean
      #   description:
      #     Print USAGE, DESCRIPTION and ARGUMENTS.

      #     Ignore all other parameters

      # version?:
      #   displayName: -version
      #   type: boolean
      #   description: |
      #     Print version number.

      #     Ignore other arguments

      # Input query options
      query?:
        displayName: -query=<string, filename>
        type: string
        description: |
          When posting a job using `application/json` this field is required.

          When posting a job using `multipart/form-data` either this field _or_ the
          query file field must be specified.
      queryLoc?:
        displayName: -query_loc=<string, range>
        description: |
          Location on the query sequence.
        type: InputBlastLocation
      # General search options

      # db?:
      #   displayName: "-db=<string, dir_name>"
      #   type: string
      #   description: |
      #     BLAST database name

      #     Incompatible with:  subject, subjectLoc

      # out?:
      #   displayName: "-out=<string, filename>"
      #   type: string
      #   description: |
      #     Output file name

      #     Default = `-`
      eValue?:
        displayName: -evalue=<real>
        type: string
        pattern: /\d+(?:\.\d+)?(?:[eE]-?\d+)?/
        description: |
          Expectation value (E) threshold for saving hits.

          Values may use scientific notation.

          Default = `10`
      # Formatting options
      outFormat?:
        displayName: -outfmt=<string, format>
        type: InputBlastOutFmt
      showGIs?:
        displayName: -show_gis
        type: boolean
        description: "Show NCBI GIs in deflines?"
      numDescriptions?:
        displayName: -num_descriptions=<integer, >=0>
        type: integer
        minimum: 0
        description: |
          Number of database sequences to show one-line descriptions for

          Not applicable for outFormat > 4

          Default = `500`

          Incompatible with: `maxTargetSeqs`
      numAlignments?:
        displayName: -num_alignments=<integer, >=0>
        type: integer
        minimum: 0
        description: |
          Number of database sequences to show alignments for.

          Default = `250`

          Incompatible with: `maxTargetSeqs`
      lineLength?:
        displayName: -line_length=<integer, >=1>
        type: integer
        minimum: 1
        description: |
          Line length for formatting alignments

          Not applicable for outFormat > 4

          Default = `60`
        #  html?:
        #    displayName: -html
        #    type: boolean
        #    description: "Produce HTML output?"
      sortHits?:
        displayName: -sorthits=<integer, (>=0 and <=4)>
        # TODO: translate this
        description: |
          Only applies to output formats 0-4.
        type: InputHitSorting
      sortHSPs?:
        displayName: -sorthsps=<integer, (>=0 and <=4)>
        description: Only applies to pairwise output format.
        type: InputHSPSorting
      # Query filtering options
      lcaseMasking?:
        displayName: -lcase_masking
        type: boolean
        description: |
          Use lower case filtering in query and subject sequence(s).
      # Restrict search or results
      qCovHSPPerc?:
        displayName: -qcov_hsp_perc=<real, 0..100>
        type: number
        format: double
        minimum: 0.0
        maximum: 100.0
        description: "Percent query coverage per hsp"
      maxHSPs?:
        displayName: -max_hsps=<integer, >=1>
        type: integer
        minimum: 1
        description: |
          Maximum number of HSPs (alignments) to keep for any single query-subject
          pair. The HSPs shown will be the best as judged by expect value. This
          number should be an integer that is one or greater. If this option is not
          set, BLAST shows all HSPs meeting the expect value criteria. Setting it
          to one will show only the best HSP for every query-subject pair
      maxTargetSeqs?:
        displayName: -max_target_seqs=<integer, >=1>
        type: integer
        minimum: 1
        description: |
          Number of aligned sequences to keep. Use with report formats that do not
          have separate definition line and alignment sections such as tabular (all
          outfmt > 4). Not compatible with numDescriptions or numAlignments. Ties
          are broken by order of sequences in the database.
          Default = `500`

          Incompatible with:

          * numDescriptions
          * numAlignments
      # Statistical options
      dbSize?:
        displayName: -dbsize=<int8>
        type: integer
        format: int8
        description: "Effective length of the database."
      searchSpace?:
        displayName: -searchsp=<int8, >=0>
        type: integer
        format: int8
        minimum: 0
        description: "Effective length of the search space"
      # Search strategy options

      # importSearchStrategy?:
      #   displayName: -import_search_strategy=<string, filename>
      #   type: file
      #   description: |
      #     Search strategy to use

      #     Incompatible with: `exportSearchStrategy`

      # exportSearchStrategy?:
      #   displayName: -export_search_strategy=<string, filename>
      #   type: string
      #   description:
      #     File name to record the search strategy used

      #     Incompatible with: `importSearchStrategy`

      # Extension options
      xDropUngap?:
        displayName: -xdrop_ungap=<real>
        type: number
        format: double
        description: |
          X-dropoff value (in bits) for ungapped extensions
      # Miscellaneous options
      parseDefLines?:
        displayName: -parse_deflines
        type: boolean
        description: |
          Parse query and subject bar delimited sequence identifiers (e.g.,
          gi|129295).
  InputBlastFmtField:
    description: |
      Field Definitions:

      | Field         | Description |
      |---------------|-------------|
      | `qseqid`      | Query Seq-id |
      | `qgi`         | Query GI |
      | `qacc`        | Query accesion |
      | `qaccver`     | Query accesion version |
      | `qlen`        | Query accesion length |
      | `sseqid`      | Subject Seq-id |
      | `sallseqid`   | All subject Seq-id(s), separated by a ';' |
      | `sgi`         | Subject GI |
      | `sallgi`      | All subject GIs |
      | `sacc`        | Subject accession |
      | `saccver`     | Subject accession version |
      | `sallacc`     | All subject accessions |
      | `slen`        | Subject length |
      | `qstart`      | Start of alignment in query |
      | `qend`        | End of alignment in query |
      | `sstart`      | Start of alignment in subject |
      | `send`        | End of alignment in subject |
      | `qseq`        | Aligned part of query sequence |
      | `sseq`        | Aligned part of subject sequence |
      | `evalue`      | Expect value |
      | `bitscore`    | Bit score |
      | `score`       | Raw score |
      | `length`      | Alignment length |
      | `pident`      | Percentage of identical matches |
      | `nident`      | Number of identical matches |
      | `mismatch`    | Number of mismatches |
      | `positive`    | Number of positive-scoring matches |
      | `gapopen`     | Number of gap openings |
      | `gaps`        | Total number of gap |
      | `ppos`        | Percentage of positive-scoring matches |
      | `frames`      | Query and subject frames separated by a '/' |
      | `qframe`      | Query frame |
      | `sframe`      | Subject frame |
      | `btop`        | Blast traceback operations (BTOP) |
      | `staxid`      | unique Subject Taxonomy ID |
      | `ssciname`    | unique Subject Scientific Name |
      | `scomname`    | unique Subject Common Name |
      | `sblastname`  | unique Subject Blast Name |
      | `sskingdom`   | unique Subject Super Kingdom |
      | `staxids`     | unique Subject Taxonomy ID(s), separated by a ';'(in numerical order) |
      | `sscinames`   | unique Subject Scientific Name(s), separated by a ';' |
      | `scomnames`   | unique Subject Common Name(s), separated by a ';' |
      | `sblastnames` | unique Subject Blast Name(s), separated by a ';' (in alphabetical order) |
      | `sskingdoms`  | unique Subject Super Kingdom(s), separated by a ';' (in alphabetical order) |
      | `stitle`      | Subject Title |
      | `salltitles`  | All Subject Title(s), separated by a '<>' |
      | `sstrand`     | Subject Strand |
      | `qcovs`       | Query Coverage Per Subject (for all HSPs) |
      | `qcovhsp`     | Query Coverage Per HSP |
      | `qcovus`      | a measure of Query Coverage that counts a position in a subject sequence for this measure only once. The second time the position is aligned to the query is not counted towards this measure. |
      | `sq`          | Include sequence data (only applicable to blastn fmt 17)
      | `sr`          | Subject as reference seq (only applicable to blastn fmt 17)

      Special fields (only applicable to output type SAM):

      - SQ = Include sequence data
      - SR = Subject as reference seq
    type: string
    enum:
      - bitscore
      - btop
      - evalue
      - frames
      - gapopen
      - gaps
      - length
      - mismatch
      - nident
      - pident
      - positive
      - ppos
      - qacc
      - qaccver
      - qcovhsp
      - qcovs
      - qcovus
      - qend
      - qframe
      - qgi
      - qlen
      - qseq
      - qseqid
      - qstart
      - sacc
      - saccver
      - sallacc
      - sallgi
      - sallseqid
      - salltitles
      - sblastname
      - sblastnames
      - scomname
      - scomnames
      - score
      - send
      - sframe
      - sgi
      - slen
      - sq
      - sr
      - ssciname
      - sscinames
      - sseq
      - sseqid
      - sskingdom
      - sskingdoms
      - sstart
      - sstrand
      - staxid
      - staxids
      - stitle
  InputBlastFormat:
    description: |
      Format Options:

      |  Enum Val                                | Meaning                             |
      |------------------------------------------|-------------------------------------|
      | `pairwise`                               | pairwise                            |
      | `query-anchored-with-identities`         | query-anchored showing identities   |
      | `query-anchored-without-identities`      | query-anchored no identities        |
      | `flat-query-anchored-with-identities`    | flat query-anchored show identities |
      | `flat-query-anchored-without-identities` | flat query-anchored no identities   |
      | `xml`                                    | XML Blast output                    |
      | `tabular`                                | tabular                             |
      | `tabular-with-comments`                  | tabular with comment lines          |
      | `text-asn-1`                             | Text ASN.1                          |
      | `binary-asn-1`                           | Binary ASN.1                        |
      | `csv`                                    | Comma-separated values              |
      | `archive-asn-1`                          | BLAST archive format (ASN.1)        |
      | `seqalign-json`                          | Seqalign (JSON)                     |
      | `multi-file-json`                        | Multiple-file BLAST JSON            |
      | `multi-file-xml2`                        | Multiple-file BLAST XML2            |
      | `single-file-json`                       | Single-file BLAST JSON              |
      | `single-file-xml2`                       | Single-file BLAST XML2              |
      | `sam`                                    | Sequence Alignment/Map (SAM)        |
      | `organism-report`                        | Organism Report                     |

      **Note**: The `sam` output format is only valid for the `blastn` tool.
    type: string
    enum:
      - pairwise
      - query-anchored-with-identities
      - query-anchored-without-identities
      - flat-query-anchored-with-identities
      - flat-query-anchored-without-identities
      - xml
      - tabular
      - tabular-with-comments
      - text-asn-1
      - binary-asn-1
      - csv
      - archive-asn-1
      - seqalign-json
      - multi-file-json
      - multi-file-xml2
      - single-file-json
      - single-file-xml2
      - sam
      - organism-report
  InputBlastOutFmt:
    description: |
      Output report format configuration.
    type: object
    additionalProperties: false
    properties:
      format?:
        description: |
          Defaults to `pairwise`
        type: InputBlastFormat
      delim?:
        description: |
          Custom delimiter character.

          Only valid for `tabular`, `tabular-with-comments`, `csv` and `sam`
          formats.

          Default value is dependent on the format type.
        type: string
        minLength: 1
        maxLength: 1
      fields?:
        description: |
          Custom output format fields.

          Allows selecting the specific fields and ordering for a report.

          **Only applicable to the `tabular`, `tabular-with-comments`, and `csv` formats.**

          Defaults to:
          ```json
          [
            "qseqid",
            "sseqid",
            "pident",
            "length",
            "mismatch",
            "gapopen",
            "qstart",
            "qend",
            "sstart",
            "send",
            "evalue",
            "bitscore"
          ]
          ```
        type: array
        items: InputBlastFmtField
        uniqueItems: true
        minItems: 1
  InputBlastLocation:
    type: object
    additionalProperties: false
    properties:
      start:
        type: integer
        format: int64
      stop:
        type: integer
        format: int64
  InputBlastTool:
    type: string
    enum:
      - blastn
      - blastp
      - blastx
      - tblastn
      - tblastx

