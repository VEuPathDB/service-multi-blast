 #%RAML 1.0 DataType

uses:
  blast:  ../blast/index.raml
  ext:    index.raml
  com:    ../blast-common/index.raml

type: blast.InputBlastConfig
discriminatorValue: tblastx
additionalProperties: false
properties:

  # Input query options

  strand?:
    displayName: -strand=<string, `both|minus|plus`>
    description: |
      Query strand(s) to search against database/subject. Choice of both, minus,
      or plus.

      Applies to task(s): all

      Default value: `both`
    type: com.InputBlastStrand

  queryGeneticCode:
    displayName: -query_gencode=<integer, 1..6, 9..16, 21..31, 33>
    description: |
      Genetic code to translate query, see
      https://www.ncbi.nlm.nih.gov/Taxonomy/taxonomyhome.html/index.cgi?chapter=cgencodes for details

      Value must be equal to `33` or be in one of the following inclusive
      ranges:

      * [1..6]
      * [9..16]
      * [21..31]

      Default Value: `1`

      Applies to task(s): all
    type: integer
    format: int8
    minimum: 1

  # General search options

  wordSize?:
    description: |
      Word size for wordfinder algorithm.

      Applies to task(s): all
    type: integer
    format: int8
    minimum: 2


  maxIntronLength?:
    displayName: -max_intron_length=<integer, >=0>
    description: |
      Length of the largest intron allowed in a translated nucleotide sequence
      when linking multiple distinct alignments (a negative value disables
      linking).

      Default: 0

      Applies to task(s): all
    type: integer
    minimum: 0

  matrix?:
    displayName: -matrix=<string>
    description: |
      Scoring matrix name.

      Default value: `BLOSUM62`
    type: ext.InputTBlastxScoringMatrix

  threshold?:
    displayName: -threshold=<real, >=0>
    type: number
    format: double
    minimum: 0.0
    description: |
      Minimum score to add a word to the BLAST lookup table.

      Default value: `13`
      Applies to task(s): all

  dbGencode?:
    displayName: -db_gencode=<integer, 1..6, 9..16, 21..31, 33>
    type: integer
    format: int8
    minimum: 1
    maximum: 33
    description: |
      Genetic code to use to translate database/subjects (see user manual for
      details)

      Value must be equal to `33` or be in one of the following inclusive
      ranges:

      * [1..6]
      * [9..16]
      * [21..31]

      Default Value: `1`

      Applies to task(s): all

  # BLAST-2-Sequences options

  # subject?:
  #   type: file
  #   description: |
  #     Subject sequence(s) to search

  #     Incompatible with:

  #     * db
  #     * giList
  #     * seqIdList
  #     * negativeGiList
  #     * negativeSeqIdList
  #     * taxIds
  #     * taxIdList
  #     * negativeTaxIds
  #     * negativeTaxIdList
  #     * dbSoftMask
  #     * dbHardMask

  subjectLoc?:
    displayName: -subject_loc=<string, range>
    type: blast.InputBlastLocation
    description: |
      Location on the subject sequence in 1-based offsets

      Incompatible with:

      * db
      * giList
      * seqIdList
      * negativeGiList
      * negativeSeqIdList
      * taxIds
      * taxIdList
      * negativeTaxIds
      * negativeTaxIdList
      * dbSoftMask
      * dbHardMask
      * remote

  # Query filtering options

  seg?:
    displayName: -seg=<string>
    description: |
      Filter query sequence with SEG.

      Default: `"12 2.2 2.5"`

      Applies to task(s): all
    type: com.InputBlastSegMask

  softMasking?:
    displayName: -soft_masking=<boolean>
    type: boolean
    description: |
      Apply filtering locations as soft masks (i.e., only for finding initial
      matches).

      Default = `false`

  # Restrict search or results

  # giList?:
  #   displayName: -gilist=<string, filename>
  #   type: file
  #   description: |
  #     Restrict search of database to list of GIs

  #     Incompatible with:

  #     * seqIdList
  #     * taxIds
  #     * taxIdList
  #     * negativeGiList
  #     * negativeSeqIdList
  #     * negativeTaxIds
  #     * negativeTaxIdList
  #     * remote
  #     * subject
  #     * subjectLoc

  # seqIdList?:
  #   displayName: -seqidlist=<string, filename>
  #   type: file
  #   description: |
  #     Restrict search of database to list of SeqIDs

  #     Incompatible with:

  #     * giList
  #     * taxIds
  #     * taxIdList
  #     * negativeGiList
  #     * negativeSeqIdList
  #     * negativeTaxIds
  #     * negativeTaxIdList
  #     * remote
  #     * subject
  #     * subjectLoc

  # negativeGiList?:
  #   displayName: negative_gilist=<string, filename>
  #   type: file
  #   description: |
  #     Restrict search of database to everything except the specified GIs

  #     Incompatible with:

  #     * giList
  #     * seqIdList
  #     * taxIds
  #     * taxIdList
  #     * negativeSeqIdList
  #     * negativeTaxIds
  #     * negativeTaxIdList
  #     * remote
  #     * subject
  #     * subjectLoc

  # negativeSeqIdList?:
  #   displayName: negative_seqidlist=<string, filename>
  #   type: file
  #   description: |
  #     Restrict search of database to everything except the specified SeqIDs

  #     Incompatible with:

  #     * giList
  #     * seqIdList
  #     * taxIds
  #     * taxIdList
  #     * negativeGiList
  #     * negativeTaxIds
  #     * negativeTaxIdList
  #     * remote
  #     * subject
  #     * subjectLoc

  taxIds?:
    displayName: -taxids=<string>
    type: string[]
    description: |
      Restrict search of database to include only the specified taxonomy IDs

      Incompatible with:

      * giList
      * seqIdList
      * taxIdList
      * negativeGiList
      * negativeSeqIdList
      * negativeTaxIds
      * negativeTaxIdList
      * remote
      * subject
      * subjectLoc

  negativeTaxIds?:
    displayName: -negative_taxids=<string>
    type: string[]
    description: |
      Restrict search of database to everything except the specified taxonomy IDs

      Incompatible with:

      * giList
      * seqIdList
      * taxIds
      * taxIdList
      * negativeGiList
      * negativeSeqIdList
      * negativeTaxIdList
      * remote
      * subject
      * subjectLoc

  # taxIdList?:
  #   displayName: taxidlist=<string, filename>
  #   type: file
  #   description: |
  #     Restrict search of database to include only the specified taxonomy IDs

  #     Incompatible with:

  #     * giList
  #     * seqIdList
  #     * taxIds
  #     * negativeGiList
  #     * negativeSeqIdList
  #     * negativeTaxIds
  #     * negativeTaxIdList
  #     * remote
  #     * subject
  #     * subjectLoc

  # negativeTaxIdList?:
  #   displayName: negative_taxidlist=<string, filename>
  #   type: file
  #   description: |
  #     Restrict search of database to everything except the specified taxonomy IDs

  #     Incompatible with:

  #     * giList
  #     * seqIdList
  #     * taxIds
  #     * taxIdList
  #     * negativeGiList
  #     * negativeSeqIdList
  #     * negativeTaxIds
  #     * remote
  #     * subject
  #     * subjectLoc

  # entrezQuery?:
  #   displayName: -entrez_query=<string>
  #   type: string
  #   description: |

  #     Restrict search with the given Entrez query

  #     Requires: remote

  dbSoftMask?:
    displayName: -db_soft_mask=<string>
    type: string
    description: |
      Filtering algorithm ID to apply to the BLAST database as soft mask (i.e.,
      only for finding initial matches).

      Applies to task(s): all

      Incompatible with:

      * dbHardMask
      * subject
      * subjectLoc

  dbHardMask?:
    displayName: -db_hard_mask=<string>
    type: string
    description: |
      Filtering algorithm ID to apply to the BLAST database as hard mask (i.e.,
      sequence is masked for all phases of search).

      Applies to task(s): all

      Incompatible with:

      * dbSoftMask
      * subject
      * subjectLoc

  cullingLimit?:
    displayName: -culling_limit=<integer, >=0>
    type: integer
    minimum: 0
    description: |
      If the query range of a hit is enveloped by that of at least this many
      higher-scoring hits, delete the hit

      Incompatible with:

      * bestHitOverhang
      * bestHitScoreEdge

  bestHitOverhang?:
    displayName: -best_hit_overhang=<real, (>0 and <0.5)>
    type: number
    format: double
    minimum: 0.0
    maximum: 0.5
    description: |
      Best Hit algorithm overhang value (recommended value: 0.1)

      Incompatible with: `cullingLimit`

  bestHitScoreEdge?:
    displayName: -best_hit_score_edge=<real, (>0 and <0.5)>
    type: number
    format: double
    minimum: 0.0
    maximum: 0.5
    description: |
      Best Hit algorithm score edge value (recommended value: 0.1)

      Incompatible with: `cullingLimit`

  subjectBesthit?:
    displayName: -subject_besthit
    type: boolean
    description: "Turn on best hit per subject sequence"

  # Statistical options

  sumStats?:
    displayName: -sum_stats=<boolean>
    type: boolean
    description: "Use sum statistics"

  # Extension options

  windowSize?:
    displayName: -window_size=<integer, >=0>
    type: integer
    minimum: 0
    description: |
      Multiple hits window size, use 0 to specify 1-hit algorithm.
