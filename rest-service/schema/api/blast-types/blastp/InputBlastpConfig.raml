#%RAML 1.0 DataType

uses:
  blast: ../blast/index.raml
  ext:   index.raml
  com:   ../blast-common/index.raml

type: blast.InputBlastConfig
discriminatorValue: blastp
additionalProperties: false
properties:

  task?:
    description: |
      Default value: `blastp`
    type: ext.InputBlastpTask

  wordSize?:
    description: |
      Word size of initial match. Valid word sizes are 2-7.

      Default value by task:

      | Task           | Value |
      |----------------|-------|
      | `blastp`       | 3     |
      | `blastp-short` | 2     |
      | `blastp-fast`  | 6     |

      Applies to task(s): all
    type: integer
    format: int8
    minimum: 2
    maximum: 7
  gapOpen?:
    description: |
      Cost to open a gap.

      Default value by task:

      | Task           | Value |
      |----------------|-------|
      | `blastp`       | 11    |
      | `blastp-short` | 9     |

      Applies to task(s): `blastp`, `blastp-short`
    type: integer
    format: int8
    minimum: 1
  gapExtend?:
    description: |
      Cost to extend a gap.

      Default value by task:

      | Task           | Value |
      |----------------|-------|
      | `blastp`       | 1     |
      | `blastp-short` | 1     |

      Applies to task(s): `blastp`, `blastp-short`
    type: integer
    format: int8
    default: 1
    minimum: 1
  matrix?:
    description: |
      Scoring matrix name.

      Default value by task:

      | Task           | Value    |
      |----------------|----------|
      | `blastp`       | BLOSUM62 |
      | `blastp-short` | PAM30    |

      Applies to task(s): `blastp`, `blastp-short`
    type: com.InputBlastScoringMatrix
  threshold?:
    description: |
      Minimum score to add a word to the BLAST lookup table.

      Default value by task:

      | Task           | Value |
      |----------------|-------|
      | `blastp`       | 11    |
      | `blastp-short` | 16    |
      | `blastp-fast`  | 21    |

      Applies to task(s): all
    type: integer
    format: int8
    minimum: 1
  compBasedStats?:
    description: |
      Use composition-based statistics.

      Default value by task:

      | Task           | Value                                     |
      |----------------|-------------------------------------------|
      | `blastp`       | `conditional-comp-based-score-adjustment` |
      | `blastp-short` | `none`                                    |
      | `blastp-fast`  | `conditional-comp-based-score-adjustment` |

      Applies to task(s): all
    type: com.InputBlastCompBasedStats
  seg?:
    description: |
      Filter query sequence with SEG.

      Applies to task(s): all
    type: com.InputBlastSegMask
    default:
      enabled: false
      window: 12
      locut: 2.2
      hicut: 2.5
  softMasking?:
    description: |
      Apply filtering locations as soft masks (i.e., only for finding initial
      matches).

      Applies to task(s): blastp
    type: boolean
    default: false
  lcaseMasking?:
    description: |
      Use lower case filtering in query and subject sequence(s).

      Applies to task(s): all
    type: boolean
    default: false
  dbSoftMask?:
    description: |
      Filtering algorithm ID to apply to the BLAST database as soft mask (i.e.,
      only for finding initial matches).

      Applies to task(s): all
    type: integer
    format: int64
  dbHardMask?:
    description: |
      Filtering algorithm ID to apply to the BLAST database as hard mask (i.e.,
      sequence is masked for all phases of search).

      Applies to task(s): all
    type: integer
    format: int64
  xdropGapFinal?:
    description: |
      Heuristic value (in bits) for final gapped alignment.

      Applies to task(s): all
    type: number
    format: double
    default: 25.0

  windowSize?:
    description: |
      Multiple hits window size, use 0 to specify 1-hit algorithm.

      Default value by task:

      | Task           | Value |
      |----------------|-------|
      | `blastp`       | 40    |
      | `blastp-short` | 15    |
      | `blastp-fast`  | 40    |

      Applies to task(s): all
    type: integer
    format: int16
    minimum: 0
  useSwTBack?:
    description: |
      Compute locally optimal Smith-Waterman alignments?

      Applies to task(s): all
    type: boolean
    default: false
