openapi: 3.1.0

info:
  title: Multi Blast
  version: 1.9.0
  license:
    name: Apache 2.0
    identifier: Apache-2.0

servers:
- url: https://amoebadb.org/multi-blast
- url: https://cryptodb.org/multi-blast
- url: https://fungidb.org/multi-blast
- url: https://giardiadb.org/multi-blast
- url: https://hostdb.org/multi-blast
- url: https://microsporidiadb.org/multi-blast
- url: https://orthomcl.org/multi-blast
- url: https://piroplasmadb.org/multi-blast
- url: https://plasmodb.org/multi-blast
- url: https://toxodb.org/multi-blast
- url: https://trichdb.org/multi-blast
- url: https://tritrypdb.org/multi-blast
- url: https://vectorbase.org/multi-blast
- url: https://veupathdb.org/multi-blast

tags:
- name: Queries
  description: Query management operation.
- name: Reports
  description: Report management operations.
- name: RPC
  description: Utility RPC operations.
- name: Meta
  description: Service meta-information.

paths:

  /jobs:
    get:
      tags:
      - Queries
      summary: List Blast Jobs
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: './schema/io/short-job-response.json'
        401:
          $ref: "#/components/responses/err401"
        500:
          $ref: "#/components/responses/err500"

    post:
      tags:
      - Queries
      summary: New Blast Job
      requestBody:
        content:
          application/json:
            schema:
              $ref: "./schema/io/json-blast-request.json"
          multipart/form-data:
            schema:
              $ref: "./schema/io/multipart-blast-request.json"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "./schema/io/new-blast-job-response.json"
        400:
          $ref: "#/components/responses/err400"
        401:
          $ref: "#/components/responses/err401"
        422:
          $ref: "#/components/responses/err422"
        500:
          $ref: "#/components/responses/err500"


  /jobs/{job-id}:
    parameters:
    - $ref: "#/components/parameters/job-id"
    get:
      tags:
      - Queries
      summary: Blast Job Details
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "./schema/io/long-job-response.json"
        401:
          $ref: "#/components/responses/err401"
        404:
          $ref: "#/components/responses/err404"
        500:
          $ref: "#/components/responses/err500"
    post:
      tags:
      - Queries
      summary: Rerun Blast Job
      responses:
        204:
          description: Success
        401:
          $ref: "#/components/responses/err401"
        404:
          $ref: "#/components/responses/err404"
        500:
          $ref: "#/components/responses/err500"


  /jobs/{job-id}/query:
    parameters:
    - $ref: "#/components/parameters/job-id"
    - name: download
      description: "Force Download"
      in: query
      required: false
      schema:
        type: boolean
        default: false
    get:
      tags:
      - Queries
      summary: Blast Job Query
      responses:
        200:
          description: Success
          headers:
            Content-Disposition:
              required: false
              description: Sent if ?download=true was set.
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
        401:
          $ref: "#/components/responses/err401"
        404:
          $ref: "#/components/responses/err404"
        500:
          $ref: "#/components/responses/err500"


  /reports:
    get:
      tags:
      - Reports
      summary: List Report Jobs
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "./schema/io/short-report-response.json"
        401:
          $ref: "#/components/responses/err401"
        500:
          $ref: "#/components/responses/err500"

    post:
      tags:
      - Reports
      summary: New Report Job
      requestBody:
        content:
          application/json:
            schema:
              $ref: "./schema/io/report-request.json"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "./schema/io/short-report-response.json"
        400:
          $ref: "#/components/responses/err400"
        401:
          $ref: "#/components/responses/err401"
        422:
          $ref: "#/components/responses/err422"
        500:
          $ref: "#/components/responses/err500"


  /reports/{report-id}:
    parameters:
    - $ref: "#/components/parameters/report-id"
    get:
      tags:
      - Reports
      summary: Report Job Details
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "./schema/io/long-report-response.json"
        401:
          $ref: "#/components/responses/err401"
        404:
          $ref: "#/components/responses/err404"
        500:
          $ref: "#/components/responses/err500"

    post:
      tags:
      - Reports
      summary: Rerun Report Job
      responses:
        204:
          description: Success
        401:
          $ref: "#/components/responses/err401"
        404:
          $ref: "#/components/responses/err404"
        500:
          $ref: "#/components/responses/err500"


  "/reports/{report-id}/files/{filename}":
    parameters:
    - $ref: "#/components/parameters/report-id"
    - name: filename
      in: path
      required: true
      schema:
        type: string
    - name: download
      description: "Force download"
      in: query
      required: false
      schema:
        type: boolean
        default: true
    - name: lines
      description: "Content-range by lines."
      in: query
      required: false
      schema:
        type: string
        pattern: '^\d+(-\d+)?$'
        examples:
        - 1
        - 1-100
    - name: headers
      description: |-
        Prepend header line.
        
        This value should be a comma-separated list of header fields that will
        be written out at the start of a report's contents.
        
        This param is only allowed on DIAMOND reports.
      in: query
      required: false
      schema:
        type: string
        examples:
        - 'foo,bar,fizz,buzz'
    - name: Content-Range
      description: |-
        Content range to return.
        
        Units may be one of:
        * `lines`
        * `bytes`
      in: header
      required: false
      schema:
        type: string
        pattern: '^(lines|bytes) (\d+-\d+|\*)/(\d+|\*)$'
        examples:
        - 'lines 1-100/*'

    get:
      tags:
      - Reports
      summary: Report File Download
      responses:
        200:
          description: Success
          headers:
            Content-Disposition:
              required: false
              description: Present if ?download=true
              schema:
                type: string
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                oneOf:
                - type: object
                - type: array
                - type: string
                - type: boolean
                - type: integer
                - type: number
            application/xml:
              schema:
                oneOf:
                - type: object
                - type: array
                - type: string
                - type: boolean
                - type: integer
                - type: number
            application/zip:
              schema:
                type: string
                format: binary
            application/octet-stream:
              schema:
                type: string
                format: binary
        401:
          $ref: "#/components/responses/err401"
        404:
          $ref: "#/components/responses/err404"
        500:
          $ref: "#/components/responses/err500"


  /link-guest:
    post:
      tags:
      - RPC
      operationId: convGuestToUser
      summary: Link Guest
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                guestID:
                  type: integer
                  format: int64
                  required: true
              additionalProperties: false


  /api:
    get:
      tags:
      - Meta
      summary: API Docs
      responses:
        200:
          description: Success
          content:
            text/html:
              schema:
                type: string
        500:
          $ref: "#/components/responses/err500"


  /health:
    get:
      tags:
      - Meta
      summary: Service Health
      responses:
        200:
          description: Success
        500:
          $ref: "#/components/responses/err500"


  /metrics:
    get:
      tags:
      - Meta
      summary: Prometheus Metrics
      responses:
        200:
          description: Success
          content:
            text/plain:
              schema:
                type: string
        500:
          $ref: "#/components/responses/err500"

components:
  parameters:
    job-id:
      name: job-id
      in: path
      required: true
      schema:
        $ref: "./schema/io/hash-id.json"
    report-id:
      name: report-id
      in: path
      required: true
      schema:
        $ref: "./schema/io/hash-id.json"
  responses:
    err400:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: './schema/common/schemata/errors/400.json'
    err401:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: './schema/common/schemata/errors/401.json'
    err403:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: './schema/common/schemata/errors/403.json'
    err404:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: './schema/common/schemata/errors/404.json'
    err422:
      description: Unprocessable Entity
      content:
        application/json:
          schema:
            $ref: './schema/common/schemata/errors/422.json'
    err500:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: './schema/common/schemata/errors/500.json'
