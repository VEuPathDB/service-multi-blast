#%RAML 1.0 Extension

extends: https://raw.githubusercontent.com/VEuPathDB/docs-api-schema/v2.0.2/libraries/base-service.raml

title: MultiBlast Query Service
version: 2.0.0
mediaType: application/json

uses:
  error: https://raw.githubusercontent.com/VEuPathDB/docs-api-schema/v2.0.2/libraries/errors.raml
  lib: schema/library.raml


/jobs:

  get:
    displayName: Get Job List
    description: Lists the current user's collected blast query jobs.
    responses:
      200:
        description: Success
        body:
          application/json:
            type: array
            items:
              type: lib.QueryJobListEntry
      401:
        description: |
          No valid user authentication provided.
        body:
          application/json:
            type: error.UnauthorizedError
      500:
        description: Server Error
        body:
          application/json:
            type: error.ServerError

  post:
    displayName: Create New Job
    description: Creates a new blast query job.
    body:
      multipart/form-data:
        type: object
        additionalProperties: false
        properties:
          config:
            displayName: Job Configuration
            type: lib.QueryJobRequest
            required: true
          query:
            displayName: Query File
            description: |
              Optional file upload parameter for uploading multi-blast queries.
              
              **IMPORTANT**: Either this field or the job config's `query` field
              MUST be set in order for a job to be valid.
            type: file
            required: false
    responses:
      200:
        description: |
          Query job was successfully submitted to the job queue for execution.
        body:
          application/json:
            type: lib.QueryJobDetails
      400:
        description: |
          Invalid request body or parameters.
        body:
          application/json:
            type: error.BadRequestError
      401:
        description: |
          No valid user authentication provided.
        body:
          application/json:
            type: error.UnauthorizedError
      422:
        description: |
          Invalid job configuration.
        body:
          application/json:
            type: error.UnprocessableEntityError

  /{job-id}:
    displayName: Job By ID
    description: |
      Operations on a singular job identified by the `{job-id}` URI parameter.

    get:
      displayName: Get Job Details
      description: |
        Returns details about the target job.
      
        As a side effect, interactions with this endpoint will cause the target
        job to be added to the requesting user's job collection if it was not
        already present in that user's collection.  This default behavior can be
        defeated by using the `skip_job_add` query parameter.
      queryParameters:
        skip_job_add:
          displayName: Skip Job Adding
          description: |
            A flag, that when set to true, tells the service to skip the part of
            the process where it would normally add the requested job to the
            current users jobs collection.
          type: boolean
          default: false
          required: false
      responses:
        200:
          description: Success
          body:
            application/json:
              type: lib.QueryJobDetails
        401:
          description: |
            No valid user authentication provided.
          body:
            application/json:
              type: error.UnauthorizedError
        404:
          description: |
            Target job does not exist.
          body:
            application/json:
              type: error.NotFoundError
        500:
          description: Server Error
          body:
            application/json:
              type: error.ServerError


    post:
      displayName: Restart Job
      description: Causes the target job to be restarted (if it is expired).
      responses:
        200:
          description: Job was successfully requeued for execution.
          body:
            application/json:
              type: lib.QueryJobDetails
        401:
          description: |
            No valid user authentication provided.
          body:
            application/json:
              type: error.UnauthorizedError
        404:
          description: |
            Target job does not exist in the user's job collection.
          body:
            application/json:
              type: error.NotFoundError
        500:
          description: Server Error
          body:
            application/json:
              type: error.ServerError

    delete:
      displayName: Delete Job
      description: Deletes the target job from the user's job collection.
      responses:
        204:
          description: |
            Job was successfully deleted from the user's job collection.
        401:
          description: |
            No valid user authentication provided.
          body:
            application/json:
              type: error.UnauthorizedError
        404:
          description: |
            Target job does not exist in the user's job collection.
          body:
            application/json:
              type: error.NotFoundError
        500:
          description: Server Error
          body:
            application/json:
              type: error.ServerError


    /query:

      get:
        displayName: Get Query
        description: |
          Returns the query for the target job, optionally as a download.
        queryParameters:
          dl:
            displayName: Download?
            description: |
              If set to true, the server will send a `Content-Disposition`
              header in the response indicating that the query file should be
              downloaded rather than rendered.
            type: boolean
        responses:
          200:
            description: Success
            body:
              text/plain:
                type: string
                displayName: Job Query
                description: Raw query text
          401:
            description: Unauthorized
            body:
              application/json:
                type: error.UnauthorizedError
          404:
            description: Not Found
            body:
              application/json:
                type: error.NotFoundError
          500:
            description: Server Error
            body:
              application/json:
                type: error.ServerError

    /result:

/statuses:
  post:
    description: |
      Lookup the statuses for the list of job IDs posted.
      
      The response will be a mapping whose keys are the posted job IDs and
      whose values are the status of the job represented by the associated ID.
      
      If a job ID in the input list does not appear to be a real/valid job ID,
      the ID will be omitted from the response object.
      
      Each status value will be a valid JobStatus enum item, meaning they will
      each be one of:
      
      * "queued"
      * "in-progress"
      * "complete"
      * "failed"
      * "expired"
    body:
      application/json:
        type: array
        items:
          type: string
          minLength: 32
          maxLength: 32
          pattern: '^[\dA-Fa-f]{32}$'
    responses:
      200:
        description: Success
        body:
          application/json:
            type: lib.JobBulkStatusResponse
      500:
        description: |
          Internal Server Error
          
          An unexpected exception was thrown while attempting to process
          the request.
        body:
          application/json:
            type: error.ServerError

